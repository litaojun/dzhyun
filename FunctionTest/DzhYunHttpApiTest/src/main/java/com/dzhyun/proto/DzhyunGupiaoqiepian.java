// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dzhyun.gupiaoqiepian.proto

package com.dzhyun.proto;

public final class DzhyunGupiaoqiepian {
  private DzhyunGupiaoqiepian() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface FenBiChengJiaoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 Id = 1;
    /**
     * <code>required int64 Id = 1;</code>
     *
     * <pre>
     *序号
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int64 Id = 1;</code>
     *
     * <pre>
     *序号
     * </pre>
     */
    long getId();

    // required int64 ShiJian = 2;
    /**
     * <code>required int64 ShiJian = 2;</code>
     *
     * <pre>
     *时间
     * </pre>
     */
    boolean hasShiJian();
    /**
     * <code>required int64 ShiJian = 2;</code>
     *
     * <pre>
     *时间
     * </pre>
     */
    long getShiJian();

    // optional int64 ChengJiaoJia = 3;
    /**
     * <code>optional int64 ChengJiaoJia = 3;</code>
     *
     * <pre>
     *成交价
     * </pre>
     */
    boolean hasChengJiaoJia();
    /**
     * <code>optional int64 ChengJiaoJia = 3;</code>
     *
     * <pre>
     *成交价
     * </pre>
     */
    long getChengJiaoJia();

    // optional int64 ChengJiaoLiang = 4;
    /**
     * <code>optional int64 ChengJiaoLiang = 4;</code>
     *
     * <pre>
     *成交量
     * </pre>
     */
    boolean hasChengJiaoLiang();
    /**
     * <code>optional int64 ChengJiaoLiang = 4;</code>
     *
     * <pre>
     *成交量
     * </pre>
     */
    long getChengJiaoLiang();

    // optional int64 ChengJiaoE = 5;
    /**
     * <code>optional int64 ChengJiaoE = 5;</code>
     *
     * <pre>
     *成交额
     * </pre>
     */
    boolean hasChengJiaoE();
    /**
     * <code>optional int64 ChengJiaoE = 5;</code>
     *
     * <pre>
     *成交额
     * </pre>
     */
    long getChengJiaoE();

    // optional int64 ChengJiaoDanBiShu = 6;
    /**
     * <code>optional int64 ChengJiaoDanBiShu = 6;</code>
     *
     * <pre>
     *成交单笔数
     * </pre>
     */
    boolean hasChengJiaoDanBiShu();
    /**
     * <code>optional int64 ChengJiaoDanBiShu = 6;</code>
     *
     * <pre>
     *成交单笔数
     * </pre>
     */
    long getChengJiaoDanBiShu();

    // optional int64 ShiFouZhuDongXingMaiDan = 7;
    /**
     * <code>optional int64 ShiFouZhuDongXingMaiDan = 7;</code>
     *
     * <pre>
     *是否主动性买单
     * </pre>
     */
    boolean hasShiFouZhuDongXingMaiDan();
    /**
     * <code>optional int64 ShiFouZhuDongXingMaiDan = 7;</code>
     *
     * <pre>
     *是否主动性买单
     * </pre>
     */
    long getShiFouZhuDongXingMaiDan();
  }
  /**
   * Protobuf type {@code dzhyun.FenBiChengJiao}
   */
  public static final class FenBiChengJiao extends
      com.google.protobuf.GeneratedMessage
      implements FenBiChengJiaoOrBuilder {
    // Use FenBiChengJiao.newBuilder() to construct.
    private FenBiChengJiao(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FenBiChengJiao(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FenBiChengJiao defaultInstance;
    public static FenBiChengJiao getDefaultInstance() {
      return defaultInstance;
    }

    public FenBiChengJiao getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FenBiChengJiao(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              shiJian_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              chengJiaoJia_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              chengJiaoLiang_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              chengJiaoE_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              chengJiaoDanBiShu_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              shiFouZhuDongXingMaiDan_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dzhyun.proto.DzhyunGupiaoqiepian.internal_static_dzhyun_FenBiChengJiao_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dzhyun.proto.DzhyunGupiaoqiepian.internal_static_dzhyun_FenBiChengJiao_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao.class, com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao.Builder.class);
    }

    public static com.google.protobuf.Parser<FenBiChengJiao> PARSER =
        new com.google.protobuf.AbstractParser<FenBiChengJiao>() {
      public FenBiChengJiao parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FenBiChengJiao(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FenBiChengJiao> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 Id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required int64 Id = 1;</code>
     *
     * <pre>
     *序号
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 Id = 1;</code>
     *
     * <pre>
     *序号
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // required int64 ShiJian = 2;
    public static final int SHIJIAN_FIELD_NUMBER = 2;
    private long shiJian_;
    /**
     * <code>required int64 ShiJian = 2;</code>
     *
     * <pre>
     *时间
     * </pre>
     */
    public boolean hasShiJian() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 ShiJian = 2;</code>
     *
     * <pre>
     *时间
     * </pre>
     */
    public long getShiJian() {
      return shiJian_;
    }

    // optional int64 ChengJiaoJia = 3;
    public static final int CHENGJIAOJIA_FIELD_NUMBER = 3;
    private long chengJiaoJia_;
    /**
     * <code>optional int64 ChengJiaoJia = 3;</code>
     *
     * <pre>
     *成交价
     * </pre>
     */
    public boolean hasChengJiaoJia() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 ChengJiaoJia = 3;</code>
     *
     * <pre>
     *成交价
     * </pre>
     */
    public long getChengJiaoJia() {
      return chengJiaoJia_;
    }

    // optional int64 ChengJiaoLiang = 4;
    public static final int CHENGJIAOLIANG_FIELD_NUMBER = 4;
    private long chengJiaoLiang_;
    /**
     * <code>optional int64 ChengJiaoLiang = 4;</code>
     *
     * <pre>
     *成交量
     * </pre>
     */
    public boolean hasChengJiaoLiang() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 ChengJiaoLiang = 4;</code>
     *
     * <pre>
     *成交量
     * </pre>
     */
    public long getChengJiaoLiang() {
      return chengJiaoLiang_;
    }

    // optional int64 ChengJiaoE = 5;
    public static final int CHENGJIAOE_FIELD_NUMBER = 5;
    private long chengJiaoE_;
    /**
     * <code>optional int64 ChengJiaoE = 5;</code>
     *
     * <pre>
     *成交额
     * </pre>
     */
    public boolean hasChengJiaoE() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 ChengJiaoE = 5;</code>
     *
     * <pre>
     *成交额
     * </pre>
     */
    public long getChengJiaoE() {
      return chengJiaoE_;
    }

    // optional int64 ChengJiaoDanBiShu = 6;
    public static final int CHENGJIAODANBISHU_FIELD_NUMBER = 6;
    private long chengJiaoDanBiShu_;
    /**
     * <code>optional int64 ChengJiaoDanBiShu = 6;</code>
     *
     * <pre>
     *成交单笔数
     * </pre>
     */
    public boolean hasChengJiaoDanBiShu() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 ChengJiaoDanBiShu = 6;</code>
     *
     * <pre>
     *成交单笔数
     * </pre>
     */
    public long getChengJiaoDanBiShu() {
      return chengJiaoDanBiShu_;
    }

    // optional int64 ShiFouZhuDongXingMaiDan = 7;
    public static final int SHIFOUZHUDONGXINGMAIDAN_FIELD_NUMBER = 7;
    private long shiFouZhuDongXingMaiDan_;
    /**
     * <code>optional int64 ShiFouZhuDongXingMaiDan = 7;</code>
     *
     * <pre>
     *是否主动性买单
     * </pre>
     */
    public boolean hasShiFouZhuDongXingMaiDan() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 ShiFouZhuDongXingMaiDan = 7;</code>
     *
     * <pre>
     *是否主动性买单
     * </pre>
     */
    public long getShiFouZhuDongXingMaiDan() {
      return shiFouZhuDongXingMaiDan_;
    }

    private void initFields() {
      id_ = 0L;
      shiJian_ = 0L;
      chengJiaoJia_ = 0L;
      chengJiaoLiang_ = 0L;
      chengJiaoE_ = 0L;
      chengJiaoDanBiShu_ = 0L;
      shiFouZhuDongXingMaiDan_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasShiJian()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, shiJian_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, chengJiaoJia_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, chengJiaoLiang_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, chengJiaoE_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, chengJiaoDanBiShu_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, shiFouZhuDongXingMaiDan_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, shiJian_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, chengJiaoJia_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, chengJiaoLiang_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, chengJiaoE_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, chengJiaoDanBiShu_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, shiFouZhuDongXingMaiDan_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dzhyun.FenBiChengJiao}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiaoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dzhyun.proto.DzhyunGupiaoqiepian.internal_static_dzhyun_FenBiChengJiao_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dzhyun.proto.DzhyunGupiaoqiepian.internal_static_dzhyun_FenBiChengJiao_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao.class, com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao.Builder.class);
      }

      // Construct using com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        shiJian_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        chengJiaoJia_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        chengJiaoLiang_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        chengJiaoE_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        chengJiaoDanBiShu_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        shiFouZhuDongXingMaiDan_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dzhyun.proto.DzhyunGupiaoqiepian.internal_static_dzhyun_FenBiChengJiao_descriptor;
      }

      public com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao getDefaultInstanceForType() {
        return com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao.getDefaultInstance();
      }

      public com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao build() {
        com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao buildPartial() {
        com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao result = new com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.shiJian_ = shiJian_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.chengJiaoJia_ = chengJiaoJia_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.chengJiaoLiang_ = chengJiaoLiang_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.chengJiaoE_ = chengJiaoE_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.chengJiaoDanBiShu_ = chengJiaoDanBiShu_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.shiFouZhuDongXingMaiDan_ = shiFouZhuDongXingMaiDan_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao) {
          return mergeFrom((com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao other) {
        if (other == com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasShiJian()) {
          setShiJian(other.getShiJian());
        }
        if (other.hasChengJiaoJia()) {
          setChengJiaoJia(other.getChengJiaoJia());
        }
        if (other.hasChengJiaoLiang()) {
          setChengJiaoLiang(other.getChengJiaoLiang());
        }
        if (other.hasChengJiaoE()) {
          setChengJiaoE(other.getChengJiaoE());
        }
        if (other.hasChengJiaoDanBiShu()) {
          setChengJiaoDanBiShu(other.getChengJiaoDanBiShu());
        }
        if (other.hasShiFouZhuDongXingMaiDan()) {
          setShiFouZhuDongXingMaiDan(other.getShiFouZhuDongXingMaiDan());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasShiJian()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dzhyun.proto.DzhyunGupiaoqiepian.FenBiChengJiao) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 Id = 1;
      private long id_ ;
      /**
       * <code>required int64 Id = 1;</code>
       *
       * <pre>
       *序号
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 Id = 1;</code>
       *
       * <pre>
       *序号
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 Id = 1;</code>
       *
       * <pre>
       *序号
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 Id = 1;</code>
       *
       * <pre>
       *序号
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      // required int64 ShiJian = 2;
      private long shiJian_ ;
      /**
       * <code>required int64 ShiJian = 2;</code>
       *
       * <pre>
       *时间
       * </pre>
       */
      public boolean hasShiJian() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 ShiJian = 2;</code>
       *
       * <pre>
       *时间
       * </pre>
       */
      public long getShiJian() {
        return shiJian_;
      }
      /**
       * <code>required int64 ShiJian = 2;</code>
       *
       * <pre>
       *时间
       * </pre>
       */
      public Builder setShiJian(long value) {
        bitField0_ |= 0x00000002;
        shiJian_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 ShiJian = 2;</code>
       *
       * <pre>
       *时间
       * </pre>
       */
      public Builder clearShiJian() {
        bitField0_ = (bitField0_ & ~0x00000002);
        shiJian_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ChengJiaoJia = 3;
      private long chengJiaoJia_ ;
      /**
       * <code>optional int64 ChengJiaoJia = 3;</code>
       *
       * <pre>
       *成交价
       * </pre>
       */
      public boolean hasChengJiaoJia() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 ChengJiaoJia = 3;</code>
       *
       * <pre>
       *成交价
       * </pre>
       */
      public long getChengJiaoJia() {
        return chengJiaoJia_;
      }
      /**
       * <code>optional int64 ChengJiaoJia = 3;</code>
       *
       * <pre>
       *成交价
       * </pre>
       */
      public Builder setChengJiaoJia(long value) {
        bitField0_ |= 0x00000004;
        chengJiaoJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ChengJiaoJia = 3;</code>
       *
       * <pre>
       *成交价
       * </pre>
       */
      public Builder clearChengJiaoJia() {
        bitField0_ = (bitField0_ & ~0x00000004);
        chengJiaoJia_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ChengJiaoLiang = 4;
      private long chengJiaoLiang_ ;
      /**
       * <code>optional int64 ChengJiaoLiang = 4;</code>
       *
       * <pre>
       *成交量
       * </pre>
       */
      public boolean hasChengJiaoLiang() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 ChengJiaoLiang = 4;</code>
       *
       * <pre>
       *成交量
       * </pre>
       */
      public long getChengJiaoLiang() {
        return chengJiaoLiang_;
      }
      /**
       * <code>optional int64 ChengJiaoLiang = 4;</code>
       *
       * <pre>
       *成交量
       * </pre>
       */
      public Builder setChengJiaoLiang(long value) {
        bitField0_ |= 0x00000008;
        chengJiaoLiang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ChengJiaoLiang = 4;</code>
       *
       * <pre>
       *成交量
       * </pre>
       */
      public Builder clearChengJiaoLiang() {
        bitField0_ = (bitField0_ & ~0x00000008);
        chengJiaoLiang_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ChengJiaoE = 5;
      private long chengJiaoE_ ;
      /**
       * <code>optional int64 ChengJiaoE = 5;</code>
       *
       * <pre>
       *成交额
       * </pre>
       */
      public boolean hasChengJiaoE() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 ChengJiaoE = 5;</code>
       *
       * <pre>
       *成交额
       * </pre>
       */
      public long getChengJiaoE() {
        return chengJiaoE_;
      }
      /**
       * <code>optional int64 ChengJiaoE = 5;</code>
       *
       * <pre>
       *成交额
       * </pre>
       */
      public Builder setChengJiaoE(long value) {
        bitField0_ |= 0x00000010;
        chengJiaoE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ChengJiaoE = 5;</code>
       *
       * <pre>
       *成交额
       * </pre>
       */
      public Builder clearChengJiaoE() {
        bitField0_ = (bitField0_ & ~0x00000010);
        chengJiaoE_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ChengJiaoDanBiShu = 6;
      private long chengJiaoDanBiShu_ ;
      /**
       * <code>optional int64 ChengJiaoDanBiShu = 6;</code>
       *
       * <pre>
       *成交单笔数
       * </pre>
       */
      public boolean hasChengJiaoDanBiShu() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 ChengJiaoDanBiShu = 6;</code>
       *
       * <pre>
       *成交单笔数
       * </pre>
       */
      public long getChengJiaoDanBiShu() {
        return chengJiaoDanBiShu_;
      }
      /**
       * <code>optional int64 ChengJiaoDanBiShu = 6;</code>
       *
       * <pre>
       *成交单笔数
       * </pre>
       */
      public Builder setChengJiaoDanBiShu(long value) {
        bitField0_ |= 0x00000020;
        chengJiaoDanBiShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ChengJiaoDanBiShu = 6;</code>
       *
       * <pre>
       *成交单笔数
       * </pre>
       */
      public Builder clearChengJiaoDanBiShu() {
        bitField0_ = (bitField0_ & ~0x00000020);
        chengJiaoDanBiShu_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ShiFouZhuDongXingMaiDan = 7;
      private long shiFouZhuDongXingMaiDan_ ;
      /**
       * <code>optional int64 ShiFouZhuDongXingMaiDan = 7;</code>
       *
       * <pre>
       *是否主动性买单
       * </pre>
       */
      public boolean hasShiFouZhuDongXingMaiDan() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 ShiFouZhuDongXingMaiDan = 7;</code>
       *
       * <pre>
       *是否主动性买单
       * </pre>
       */
      public long getShiFouZhuDongXingMaiDan() {
        return shiFouZhuDongXingMaiDan_;
      }
      /**
       * <code>optional int64 ShiFouZhuDongXingMaiDan = 7;</code>
       *
       * <pre>
       *是否主动性买单
       * </pre>
       */
      public Builder setShiFouZhuDongXingMaiDan(long value) {
        bitField0_ |= 0x00000040;
        shiFouZhuDongXingMaiDan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ShiFouZhuDongXingMaiDan = 7;</code>
       *
       * <pre>
       *是否主动性买单
       * </pre>
       */
      public Builder clearShiFouZhuDongXingMaiDan() {
        bitField0_ = (bitField0_ & ~0x00000040);
        shiFouZhuDongXingMaiDan_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dzhyun.FenBiChengJiao)
    }

    static {
      defaultInstance = new FenBiChengJiao(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dzhyun.FenBiChengJiao)
  }

  public interface GeGuDongTaiOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 Id = 1;
    /**
     * <code>required int64 Id = 1;</code>
     *
     * <pre>
     *序号
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int64 Id = 1;</code>
     *
     * <pre>
     *序号
     * </pre>
     */
    long getId();

    // required int64 ShiJian = 2;
    /**
     * <code>required int64 ShiJian = 2;</code>
     *
     * <pre>
     *时间
     * </pre>
     */
    boolean hasShiJian();
    /**
     * <code>required int64 ShiJian = 2;</code>
     *
     * <pre>
     *时间
     * </pre>
     */
    long getShiJian();

    // optional int64 ZuiXinJia = 3;
    /**
     * <code>optional int64 ZuiXinJia = 3;</code>
     *
     * <pre>
     *最新价
     * </pre>
     */
    boolean hasZuiXinJia();
    /**
     * <code>optional int64 ZuiXinJia = 3;</code>
     *
     * <pre>
     *最新价
     * </pre>
     */
    long getZuiXinJia();

    // optional int64 KaiPanJia = 4;
    /**
     * <code>optional int64 KaiPanJia = 4;</code>
     *
     * <pre>
     *今开
     * </pre>
     */
    boolean hasKaiPanJia();
    /**
     * <code>optional int64 KaiPanJia = 4;</code>
     *
     * <pre>
     *今开
     * </pre>
     */
    long getKaiPanJia();

    // optional int64 ZuiGaoJia = 5;
    /**
     * <code>optional int64 ZuiGaoJia = 5;</code>
     *
     * <pre>
     *最高
     * </pre>
     */
    boolean hasZuiGaoJia();
    /**
     * <code>optional int64 ZuiGaoJia = 5;</code>
     *
     * <pre>
     *最高
     * </pre>
     */
    long getZuiGaoJia();

    // optional int64 ZuiDiJia = 6;
    /**
     * <code>optional int64 ZuiDiJia = 6;</code>
     *
     * <pre>
     *最低
     * </pre>
     */
    boolean hasZuiDiJia();
    /**
     * <code>optional int64 ZuiDiJia = 6;</code>
     *
     * <pre>
     *最低
     * </pre>
     */
    long getZuiDiJia();

    // optional int64 ZuoShou = 7;
    /**
     * <code>optional int64 ZuoShou = 7;</code>
     *
     * <pre>
     *昨收
     * </pre>
     */
    boolean hasZuoShou();
    /**
     * <code>optional int64 ZuoShou = 7;</code>
     *
     * <pre>
     *昨收
     * </pre>
     */
    long getZuoShou();

    // optional int64 JunJia = 8;
    /**
     * <code>optional int64 JunJia = 8;</code>
     *
     * <pre>
     *均价
     * </pre>
     */
    boolean hasJunJia();
    /**
     * <code>optional int64 JunJia = 8;</code>
     *
     * <pre>
     *均价
     * </pre>
     */
    long getJunJia();

    // optional int64 ZhangDie = 9;
    /**
     * <code>optional int64 ZhangDie = 9;</code>
     *
     * <pre>
     *涨跌
     * </pre>
     */
    boolean hasZhangDie();
    /**
     * <code>optional int64 ZhangDie = 9;</code>
     *
     * <pre>
     *涨跌
     * </pre>
     */
    long getZhangDie();

    // optional int64 ZhangFu = 10;
    /**
     * <code>optional int64 ZhangFu = 10;</code>
     *
     * <pre>
     *涨幅
     * </pre>
     */
    boolean hasZhangFu();
    /**
     * <code>optional int64 ZhangFu = 10;</code>
     *
     * <pre>
     *涨幅
     * </pre>
     */
    long getZhangFu();

    // optional int64 ZhenFu = 11;
    /**
     * <code>optional int64 ZhenFu = 11;</code>
     *
     * <pre>
     *振幅
     * </pre>
     */
    boolean hasZhenFu();
    /**
     * <code>optional int64 ZhenFu = 11;</code>
     *
     * <pre>
     *振幅
     * </pre>
     */
    long getZhenFu();

    // optional int64 ChengJiaoLiang = 12;
    /**
     * <code>optional int64 ChengJiaoLiang = 12;</code>
     *
     * <pre>
     *总手-总成交量，单位股
     * </pre>
     */
    boolean hasChengJiaoLiang();
    /**
     * <code>optional int64 ChengJiaoLiang = 12;</code>
     *
     * <pre>
     *总手-总成交量，单位股
     * </pre>
     */
    long getChengJiaoLiang();

    // optional int64 XianShou = 13;
    /**
     * <code>optional int64 XianShou = 13;</code>
     *
     * <pre>
     *现手-最新一笔交量，单位股
     * </pre>
     */
    boolean hasXianShou();
    /**
     * <code>optional int64 XianShou = 13;</code>
     *
     * <pre>
     *现手-最新一笔交量，单位股
     * </pre>
     */
    long getXianShou();

    // optional int64 ChengJiaoE = 14;
    /**
     * <code>optional int64 ChengJiaoE = 14;</code>
     *
     * <pre>
     *总成交额
     * </pre>
     */
    boolean hasChengJiaoE();
    /**
     * <code>optional int64 ChengJiaoE = 14;</code>
     *
     * <pre>
     *总成交额
     * </pre>
     */
    long getChengJiaoE();

    // optional int64 ZongChengJiaoBiShu = 15;
    /**
     * <code>optional int64 ZongChengJiaoBiShu = 15;</code>
     *
     * <pre>
     *总成交笔数
     * </pre>
     */
    boolean hasZongChengJiaoBiShu();
    /**
     * <code>optional int64 ZongChengJiaoBiShu = 15;</code>
     *
     * <pre>
     *总成交笔数
     * </pre>
     */
    long getZongChengJiaoBiShu();

    // optional int64 MeiBiChengJiaoGuShu = 16;
    /**
     * <code>optional int64 MeiBiChengJiaoGuShu = 16;</code>
     *
     * <pre>
     *每笔成交股数
     * </pre>
     */
    boolean hasMeiBiChengJiaoGuShu();
    /**
     * <code>optional int64 MeiBiChengJiaoGuShu = 16;</code>
     *
     * <pre>
     *每笔成交股数
     * </pre>
     */
    long getMeiBiChengJiaoGuShu();

    // optional int64 HuanShou = 17;
    /**
     * <code>optional int64 HuanShou = 17;</code>
     *
     * <pre>
     *换手,千分比
     * </pre>
     */
    boolean hasHuanShou();
    /**
     * <code>optional int64 HuanShou = 17;</code>
     *
     * <pre>
     *换手,千分比
     * </pre>
     */
    long getHuanShou();

    // optional int64 LiangBi = 18;
    /**
     * <code>optional int64 LiangBi = 18;</code>
     *
     * <pre>
     *量比,千分比
     * </pre>
     */
    boolean hasLiangBi();
    /**
     * <code>optional int64 LiangBi = 18;</code>
     *
     * <pre>
     *量比,千分比
     * </pre>
     */
    long getLiangBi();

    // optional int64 NeiPan = 19;
    /**
     * <code>optional int64 NeiPan = 19;</code>
     *
     * <pre>
     *内盘
     * </pre>
     */
    boolean hasNeiPan();
    /**
     * <code>optional int64 NeiPan = 19;</code>
     *
     * <pre>
     *内盘
     * </pre>
     */
    long getNeiPan();

    // optional int64 WaiPan = 20;
    /**
     * <code>optional int64 WaiPan = 20;</code>
     *
     * <pre>
     *外盘
     * </pre>
     */
    boolean hasWaiPan();
    /**
     * <code>optional int64 WaiPan = 20;</code>
     *
     * <pre>
     *外盘
     * </pre>
     */
    long getWaiPan();

    // optional int64 ZongMaiRu = 21;
    /**
     * <code>optional int64 ZongMaiRu = 21;</code>
     *
     * <pre>
     *lv2数据
     * </pre>
     */
    boolean hasZongMaiRu();
    /**
     * <code>optional int64 ZongMaiRu = 21;</code>
     *
     * <pre>
     *lv2数据
     * </pre>
     */
    long getZongMaiRu();

    // optional int64 ZongMaiChu = 22;
    /**
     * <code>optional int64 ZongMaiChu = 22;</code>
     *
     * <pre>
     *总卖
     * </pre>
     */
    boolean hasZongMaiChu();
    /**
     * <code>optional int64 ZongMaiChu = 22;</code>
     *
     * <pre>
     *总卖
     * </pre>
     */
    long getZongMaiChu();

    // optional int64 ZongMaiRuJunJia = 23;
    /**
     * <code>optional int64 ZongMaiRuJunJia = 23;</code>
     *
     * <pre>
     *总买均价
     * </pre>
     */
    boolean hasZongMaiRuJunJia();
    /**
     * <code>optional int64 ZongMaiRuJunJia = 23;</code>
     *
     * <pre>
     *总买均价
     * </pre>
     */
    long getZongMaiRuJunJia();

    // optional int64 ZongMaiChuJunJia = 24;
    /**
     * <code>optional int64 ZongMaiChuJunJia = 24;</code>
     *
     * <pre>
     *总卖均价
     * </pre>
     */
    boolean hasZongMaiChuJunJia();
    /**
     * <code>optional int64 ZongMaiChuJunJia = 24;</code>
     *
     * <pre>
     *总卖均价
     * </pre>
     */
    long getZongMaiChuJunJia();
  }
  /**
   * Protobuf type {@code dzhyun.GeGuDongTai}
   */
  public static final class GeGuDongTai extends
      com.google.protobuf.GeneratedMessage
      implements GeGuDongTaiOrBuilder {
    // Use GeGuDongTai.newBuilder() to construct.
    private GeGuDongTai(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GeGuDongTai(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GeGuDongTai defaultInstance;
    public static GeGuDongTai getDefaultInstance() {
      return defaultInstance;
    }

    public GeGuDongTai getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GeGuDongTai(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              shiJian_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              zuiXinJia_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              kaiPanJia_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              zuiGaoJia_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              zuiDiJia_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              zuoShou_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              junJia_ = input.readInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              zhangDie_ = input.readInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              zhangFu_ = input.readInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              zhenFu_ = input.readInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              chengJiaoLiang_ = input.readInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              xianShou_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              chengJiaoE_ = input.readInt64();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              zongChengJiaoBiShu_ = input.readInt64();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              meiBiChengJiaoGuShu_ = input.readInt64();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              huanShou_ = input.readInt64();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              liangBi_ = input.readInt64();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              neiPan_ = input.readInt64();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              waiPan_ = input.readInt64();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              zongMaiRu_ = input.readInt64();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              zongMaiChu_ = input.readInt64();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              zongMaiRuJunJia_ = input.readInt64();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              zongMaiChuJunJia_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dzhyun.proto.DzhyunGupiaoqiepian.internal_static_dzhyun_GeGuDongTai_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dzhyun.proto.DzhyunGupiaoqiepian.internal_static_dzhyun_GeGuDongTai_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai.class, com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai.Builder.class);
    }

    public static com.google.protobuf.Parser<GeGuDongTai> PARSER =
        new com.google.protobuf.AbstractParser<GeGuDongTai>() {
      public GeGuDongTai parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GeGuDongTai(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GeGuDongTai> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 Id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required int64 Id = 1;</code>
     *
     * <pre>
     *序号
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 Id = 1;</code>
     *
     * <pre>
     *序号
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // required int64 ShiJian = 2;
    public static final int SHIJIAN_FIELD_NUMBER = 2;
    private long shiJian_;
    /**
     * <code>required int64 ShiJian = 2;</code>
     *
     * <pre>
     *时间
     * </pre>
     */
    public boolean hasShiJian() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 ShiJian = 2;</code>
     *
     * <pre>
     *时间
     * </pre>
     */
    public long getShiJian() {
      return shiJian_;
    }

    // optional int64 ZuiXinJia = 3;
    public static final int ZUIXINJIA_FIELD_NUMBER = 3;
    private long zuiXinJia_;
    /**
     * <code>optional int64 ZuiXinJia = 3;</code>
     *
     * <pre>
     *最新价
     * </pre>
     */
    public boolean hasZuiXinJia() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 ZuiXinJia = 3;</code>
     *
     * <pre>
     *最新价
     * </pre>
     */
    public long getZuiXinJia() {
      return zuiXinJia_;
    }

    // optional int64 KaiPanJia = 4;
    public static final int KAIPANJIA_FIELD_NUMBER = 4;
    private long kaiPanJia_;
    /**
     * <code>optional int64 KaiPanJia = 4;</code>
     *
     * <pre>
     *今开
     * </pre>
     */
    public boolean hasKaiPanJia() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 KaiPanJia = 4;</code>
     *
     * <pre>
     *今开
     * </pre>
     */
    public long getKaiPanJia() {
      return kaiPanJia_;
    }

    // optional int64 ZuiGaoJia = 5;
    public static final int ZUIGAOJIA_FIELD_NUMBER = 5;
    private long zuiGaoJia_;
    /**
     * <code>optional int64 ZuiGaoJia = 5;</code>
     *
     * <pre>
     *最高
     * </pre>
     */
    public boolean hasZuiGaoJia() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 ZuiGaoJia = 5;</code>
     *
     * <pre>
     *最高
     * </pre>
     */
    public long getZuiGaoJia() {
      return zuiGaoJia_;
    }

    // optional int64 ZuiDiJia = 6;
    public static final int ZUIDIJIA_FIELD_NUMBER = 6;
    private long zuiDiJia_;
    /**
     * <code>optional int64 ZuiDiJia = 6;</code>
     *
     * <pre>
     *最低
     * </pre>
     */
    public boolean hasZuiDiJia() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 ZuiDiJia = 6;</code>
     *
     * <pre>
     *最低
     * </pre>
     */
    public long getZuiDiJia() {
      return zuiDiJia_;
    }

    // optional int64 ZuoShou = 7;
    public static final int ZUOSHOU_FIELD_NUMBER = 7;
    private long zuoShou_;
    /**
     * <code>optional int64 ZuoShou = 7;</code>
     *
     * <pre>
     *昨收
     * </pre>
     */
    public boolean hasZuoShou() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 ZuoShou = 7;</code>
     *
     * <pre>
     *昨收
     * </pre>
     */
    public long getZuoShou() {
      return zuoShou_;
    }

    // optional int64 JunJia = 8;
    public static final int JUNJIA_FIELD_NUMBER = 8;
    private long junJia_;
    /**
     * <code>optional int64 JunJia = 8;</code>
     *
     * <pre>
     *均价
     * </pre>
     */
    public boolean hasJunJia() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 JunJia = 8;</code>
     *
     * <pre>
     *均价
     * </pre>
     */
    public long getJunJia() {
      return junJia_;
    }

    // optional int64 ZhangDie = 9;
    public static final int ZHANGDIE_FIELD_NUMBER = 9;
    private long zhangDie_;
    /**
     * <code>optional int64 ZhangDie = 9;</code>
     *
     * <pre>
     *涨跌
     * </pre>
     */
    public boolean hasZhangDie() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 ZhangDie = 9;</code>
     *
     * <pre>
     *涨跌
     * </pre>
     */
    public long getZhangDie() {
      return zhangDie_;
    }

    // optional int64 ZhangFu = 10;
    public static final int ZHANGFU_FIELD_NUMBER = 10;
    private long zhangFu_;
    /**
     * <code>optional int64 ZhangFu = 10;</code>
     *
     * <pre>
     *涨幅
     * </pre>
     */
    public boolean hasZhangFu() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 ZhangFu = 10;</code>
     *
     * <pre>
     *涨幅
     * </pre>
     */
    public long getZhangFu() {
      return zhangFu_;
    }

    // optional int64 ZhenFu = 11;
    public static final int ZHENFU_FIELD_NUMBER = 11;
    private long zhenFu_;
    /**
     * <code>optional int64 ZhenFu = 11;</code>
     *
     * <pre>
     *振幅
     * </pre>
     */
    public boolean hasZhenFu() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 ZhenFu = 11;</code>
     *
     * <pre>
     *振幅
     * </pre>
     */
    public long getZhenFu() {
      return zhenFu_;
    }

    // optional int64 ChengJiaoLiang = 12;
    public static final int CHENGJIAOLIANG_FIELD_NUMBER = 12;
    private long chengJiaoLiang_;
    /**
     * <code>optional int64 ChengJiaoLiang = 12;</code>
     *
     * <pre>
     *总手-总成交量，单位股
     * </pre>
     */
    public boolean hasChengJiaoLiang() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 ChengJiaoLiang = 12;</code>
     *
     * <pre>
     *总手-总成交量，单位股
     * </pre>
     */
    public long getChengJiaoLiang() {
      return chengJiaoLiang_;
    }

    // optional int64 XianShou = 13;
    public static final int XIANSHOU_FIELD_NUMBER = 13;
    private long xianShou_;
    /**
     * <code>optional int64 XianShou = 13;</code>
     *
     * <pre>
     *现手-最新一笔交量，单位股
     * </pre>
     */
    public boolean hasXianShou() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 XianShou = 13;</code>
     *
     * <pre>
     *现手-最新一笔交量，单位股
     * </pre>
     */
    public long getXianShou() {
      return xianShou_;
    }

    // optional int64 ChengJiaoE = 14;
    public static final int CHENGJIAOE_FIELD_NUMBER = 14;
    private long chengJiaoE_;
    /**
     * <code>optional int64 ChengJiaoE = 14;</code>
     *
     * <pre>
     *总成交额
     * </pre>
     */
    public boolean hasChengJiaoE() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 ChengJiaoE = 14;</code>
     *
     * <pre>
     *总成交额
     * </pre>
     */
    public long getChengJiaoE() {
      return chengJiaoE_;
    }

    // optional int64 ZongChengJiaoBiShu = 15;
    public static final int ZONGCHENGJIAOBISHU_FIELD_NUMBER = 15;
    private long zongChengJiaoBiShu_;
    /**
     * <code>optional int64 ZongChengJiaoBiShu = 15;</code>
     *
     * <pre>
     *总成交笔数
     * </pre>
     */
    public boolean hasZongChengJiaoBiShu() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 ZongChengJiaoBiShu = 15;</code>
     *
     * <pre>
     *总成交笔数
     * </pre>
     */
    public long getZongChengJiaoBiShu() {
      return zongChengJiaoBiShu_;
    }

    // optional int64 MeiBiChengJiaoGuShu = 16;
    public static final int MEIBICHENGJIAOGUSHU_FIELD_NUMBER = 16;
    private long meiBiChengJiaoGuShu_;
    /**
     * <code>optional int64 MeiBiChengJiaoGuShu = 16;</code>
     *
     * <pre>
     *每笔成交股数
     * </pre>
     */
    public boolean hasMeiBiChengJiaoGuShu() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 MeiBiChengJiaoGuShu = 16;</code>
     *
     * <pre>
     *每笔成交股数
     * </pre>
     */
    public long getMeiBiChengJiaoGuShu() {
      return meiBiChengJiaoGuShu_;
    }

    // optional int64 HuanShou = 17;
    public static final int HUANSHOU_FIELD_NUMBER = 17;
    private long huanShou_;
    /**
     * <code>optional int64 HuanShou = 17;</code>
     *
     * <pre>
     *换手,千分比
     * </pre>
     */
    public boolean hasHuanShou() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 HuanShou = 17;</code>
     *
     * <pre>
     *换手,千分比
     * </pre>
     */
    public long getHuanShou() {
      return huanShou_;
    }

    // optional int64 LiangBi = 18;
    public static final int LIANGBI_FIELD_NUMBER = 18;
    private long liangBi_;
    /**
     * <code>optional int64 LiangBi = 18;</code>
     *
     * <pre>
     *量比,千分比
     * </pre>
     */
    public boolean hasLiangBi() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 LiangBi = 18;</code>
     *
     * <pre>
     *量比,千分比
     * </pre>
     */
    public long getLiangBi() {
      return liangBi_;
    }

    // optional int64 NeiPan = 19;
    public static final int NEIPAN_FIELD_NUMBER = 19;
    private long neiPan_;
    /**
     * <code>optional int64 NeiPan = 19;</code>
     *
     * <pre>
     *内盘
     * </pre>
     */
    public boolean hasNeiPan() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 NeiPan = 19;</code>
     *
     * <pre>
     *内盘
     * </pre>
     */
    public long getNeiPan() {
      return neiPan_;
    }

    // optional int64 WaiPan = 20;
    public static final int WAIPAN_FIELD_NUMBER = 20;
    private long waiPan_;
    /**
     * <code>optional int64 WaiPan = 20;</code>
     *
     * <pre>
     *外盘
     * </pre>
     */
    public boolean hasWaiPan() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 WaiPan = 20;</code>
     *
     * <pre>
     *外盘
     * </pre>
     */
    public long getWaiPan() {
      return waiPan_;
    }

    // optional int64 ZongMaiRu = 21;
    public static final int ZONGMAIRU_FIELD_NUMBER = 21;
    private long zongMaiRu_;
    /**
     * <code>optional int64 ZongMaiRu = 21;</code>
     *
     * <pre>
     *lv2数据
     * </pre>
     */
    public boolean hasZongMaiRu() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int64 ZongMaiRu = 21;</code>
     *
     * <pre>
     *lv2数据
     * </pre>
     */
    public long getZongMaiRu() {
      return zongMaiRu_;
    }

    // optional int64 ZongMaiChu = 22;
    public static final int ZONGMAICHU_FIELD_NUMBER = 22;
    private long zongMaiChu_;
    /**
     * <code>optional int64 ZongMaiChu = 22;</code>
     *
     * <pre>
     *总卖
     * </pre>
     */
    public boolean hasZongMaiChu() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int64 ZongMaiChu = 22;</code>
     *
     * <pre>
     *总卖
     * </pre>
     */
    public long getZongMaiChu() {
      return zongMaiChu_;
    }

    // optional int64 ZongMaiRuJunJia = 23;
    public static final int ZONGMAIRUJUNJIA_FIELD_NUMBER = 23;
    private long zongMaiRuJunJia_;
    /**
     * <code>optional int64 ZongMaiRuJunJia = 23;</code>
     *
     * <pre>
     *总买均价
     * </pre>
     */
    public boolean hasZongMaiRuJunJia() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int64 ZongMaiRuJunJia = 23;</code>
     *
     * <pre>
     *总买均价
     * </pre>
     */
    public long getZongMaiRuJunJia() {
      return zongMaiRuJunJia_;
    }

    // optional int64 ZongMaiChuJunJia = 24;
    public static final int ZONGMAICHUJUNJIA_FIELD_NUMBER = 24;
    private long zongMaiChuJunJia_;
    /**
     * <code>optional int64 ZongMaiChuJunJia = 24;</code>
     *
     * <pre>
     *总卖均价
     * </pre>
     */
    public boolean hasZongMaiChuJunJia() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int64 ZongMaiChuJunJia = 24;</code>
     *
     * <pre>
     *总卖均价
     * </pre>
     */
    public long getZongMaiChuJunJia() {
      return zongMaiChuJunJia_;
    }

    private void initFields() {
      id_ = 0L;
      shiJian_ = 0L;
      zuiXinJia_ = 0L;
      kaiPanJia_ = 0L;
      zuiGaoJia_ = 0L;
      zuiDiJia_ = 0L;
      zuoShou_ = 0L;
      junJia_ = 0L;
      zhangDie_ = 0L;
      zhangFu_ = 0L;
      zhenFu_ = 0L;
      chengJiaoLiang_ = 0L;
      xianShou_ = 0L;
      chengJiaoE_ = 0L;
      zongChengJiaoBiShu_ = 0L;
      meiBiChengJiaoGuShu_ = 0L;
      huanShou_ = 0L;
      liangBi_ = 0L;
      neiPan_ = 0L;
      waiPan_ = 0L;
      zongMaiRu_ = 0L;
      zongMaiChu_ = 0L;
      zongMaiRuJunJia_ = 0L;
      zongMaiChuJunJia_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasShiJian()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, shiJian_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, zuiXinJia_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, kaiPanJia_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, zuiGaoJia_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, zuiDiJia_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, zuoShou_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, junJia_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(9, zhangDie_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(10, zhangFu_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(11, zhenFu_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(12, chengJiaoLiang_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, xianShou_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, chengJiaoE_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(15, zongChengJiaoBiShu_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(16, meiBiChengJiaoGuShu_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(17, huanShou_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(18, liangBi_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(19, neiPan_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(20, waiPan_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(21, zongMaiRu_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt64(22, zongMaiChu_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt64(23, zongMaiRuJunJia_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt64(24, zongMaiChuJunJia_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, shiJian_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, zuiXinJia_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, kaiPanJia_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, zuiGaoJia_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, zuiDiJia_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, zuoShou_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, junJia_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, zhangDie_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, zhangFu_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, zhenFu_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, chengJiaoLiang_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, xianShou_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, chengJiaoE_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, zongChengJiaoBiShu_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, meiBiChengJiaoGuShu_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, huanShou_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, liangBi_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, neiPan_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, waiPan_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(21, zongMaiRu_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(22, zongMaiChu_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(23, zongMaiRuJunJia_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(24, zongMaiChuJunJia_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dzhyun.GeGuDongTai}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTaiOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dzhyun.proto.DzhyunGupiaoqiepian.internal_static_dzhyun_GeGuDongTai_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dzhyun.proto.DzhyunGupiaoqiepian.internal_static_dzhyun_GeGuDongTai_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai.class, com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai.Builder.class);
      }

      // Construct using com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        shiJian_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        zuiXinJia_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        kaiPanJia_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        zuiGaoJia_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        zuiDiJia_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        zuoShou_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        junJia_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        zhangDie_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        zhangFu_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        zhenFu_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        chengJiaoLiang_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        xianShou_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        chengJiaoE_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        zongChengJiaoBiShu_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        meiBiChengJiaoGuShu_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        huanShou_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        liangBi_ = 0L;
        bitField0_ = (bitField0_ & ~0x00020000);
        neiPan_ = 0L;
        bitField0_ = (bitField0_ & ~0x00040000);
        waiPan_ = 0L;
        bitField0_ = (bitField0_ & ~0x00080000);
        zongMaiRu_ = 0L;
        bitField0_ = (bitField0_ & ~0x00100000);
        zongMaiChu_ = 0L;
        bitField0_ = (bitField0_ & ~0x00200000);
        zongMaiRuJunJia_ = 0L;
        bitField0_ = (bitField0_ & ~0x00400000);
        zongMaiChuJunJia_ = 0L;
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dzhyun.proto.DzhyunGupiaoqiepian.internal_static_dzhyun_GeGuDongTai_descriptor;
      }

      public com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai getDefaultInstanceForType() {
        return com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai.getDefaultInstance();
      }

      public com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai build() {
        com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai buildPartial() {
        com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai result = new com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.shiJian_ = shiJian_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.zuiXinJia_ = zuiXinJia_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.kaiPanJia_ = kaiPanJia_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.zuiGaoJia_ = zuiGaoJia_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.zuiDiJia_ = zuiDiJia_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.zuoShou_ = zuoShou_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.junJia_ = junJia_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.zhangDie_ = zhangDie_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.zhangFu_ = zhangFu_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.zhenFu_ = zhenFu_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.chengJiaoLiang_ = chengJiaoLiang_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.xianShou_ = xianShou_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.chengJiaoE_ = chengJiaoE_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.zongChengJiaoBiShu_ = zongChengJiaoBiShu_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.meiBiChengJiaoGuShu_ = meiBiChengJiaoGuShu_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.huanShou_ = huanShou_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.liangBi_ = liangBi_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.neiPan_ = neiPan_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.waiPan_ = waiPan_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.zongMaiRu_ = zongMaiRu_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.zongMaiChu_ = zongMaiChu_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.zongMaiRuJunJia_ = zongMaiRuJunJia_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.zongMaiChuJunJia_ = zongMaiChuJunJia_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai) {
          return mergeFrom((com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai other) {
        if (other == com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasShiJian()) {
          setShiJian(other.getShiJian());
        }
        if (other.hasZuiXinJia()) {
          setZuiXinJia(other.getZuiXinJia());
        }
        if (other.hasKaiPanJia()) {
          setKaiPanJia(other.getKaiPanJia());
        }
        if (other.hasZuiGaoJia()) {
          setZuiGaoJia(other.getZuiGaoJia());
        }
        if (other.hasZuiDiJia()) {
          setZuiDiJia(other.getZuiDiJia());
        }
        if (other.hasZuoShou()) {
          setZuoShou(other.getZuoShou());
        }
        if (other.hasJunJia()) {
          setJunJia(other.getJunJia());
        }
        if (other.hasZhangDie()) {
          setZhangDie(other.getZhangDie());
        }
        if (other.hasZhangFu()) {
          setZhangFu(other.getZhangFu());
        }
        if (other.hasZhenFu()) {
          setZhenFu(other.getZhenFu());
        }
        if (other.hasChengJiaoLiang()) {
          setChengJiaoLiang(other.getChengJiaoLiang());
        }
        if (other.hasXianShou()) {
          setXianShou(other.getXianShou());
        }
        if (other.hasChengJiaoE()) {
          setChengJiaoE(other.getChengJiaoE());
        }
        if (other.hasZongChengJiaoBiShu()) {
          setZongChengJiaoBiShu(other.getZongChengJiaoBiShu());
        }
        if (other.hasMeiBiChengJiaoGuShu()) {
          setMeiBiChengJiaoGuShu(other.getMeiBiChengJiaoGuShu());
        }
        if (other.hasHuanShou()) {
          setHuanShou(other.getHuanShou());
        }
        if (other.hasLiangBi()) {
          setLiangBi(other.getLiangBi());
        }
        if (other.hasNeiPan()) {
          setNeiPan(other.getNeiPan());
        }
        if (other.hasWaiPan()) {
          setWaiPan(other.getWaiPan());
        }
        if (other.hasZongMaiRu()) {
          setZongMaiRu(other.getZongMaiRu());
        }
        if (other.hasZongMaiChu()) {
          setZongMaiChu(other.getZongMaiChu());
        }
        if (other.hasZongMaiRuJunJia()) {
          setZongMaiRuJunJia(other.getZongMaiRuJunJia());
        }
        if (other.hasZongMaiChuJunJia()) {
          setZongMaiChuJunJia(other.getZongMaiChuJunJia());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasShiJian()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dzhyun.proto.DzhyunGupiaoqiepian.GeGuDongTai) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 Id = 1;
      private long id_ ;
      /**
       * <code>required int64 Id = 1;</code>
       *
       * <pre>
       *序号
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 Id = 1;</code>
       *
       * <pre>
       *序号
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 Id = 1;</code>
       *
       * <pre>
       *序号
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 Id = 1;</code>
       *
       * <pre>
       *序号
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      // required int64 ShiJian = 2;
      private long shiJian_ ;
      /**
       * <code>required int64 ShiJian = 2;</code>
       *
       * <pre>
       *时间
       * </pre>
       */
      public boolean hasShiJian() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 ShiJian = 2;</code>
       *
       * <pre>
       *时间
       * </pre>
       */
      public long getShiJian() {
        return shiJian_;
      }
      /**
       * <code>required int64 ShiJian = 2;</code>
       *
       * <pre>
       *时间
       * </pre>
       */
      public Builder setShiJian(long value) {
        bitField0_ |= 0x00000002;
        shiJian_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 ShiJian = 2;</code>
       *
       * <pre>
       *时间
       * </pre>
       */
      public Builder clearShiJian() {
        bitField0_ = (bitField0_ & ~0x00000002);
        shiJian_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ZuiXinJia = 3;
      private long zuiXinJia_ ;
      /**
       * <code>optional int64 ZuiXinJia = 3;</code>
       *
       * <pre>
       *最新价
       * </pre>
       */
      public boolean hasZuiXinJia() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 ZuiXinJia = 3;</code>
       *
       * <pre>
       *最新价
       * </pre>
       */
      public long getZuiXinJia() {
        return zuiXinJia_;
      }
      /**
       * <code>optional int64 ZuiXinJia = 3;</code>
       *
       * <pre>
       *最新价
       * </pre>
       */
      public Builder setZuiXinJia(long value) {
        bitField0_ |= 0x00000004;
        zuiXinJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZuiXinJia = 3;</code>
       *
       * <pre>
       *最新价
       * </pre>
       */
      public Builder clearZuiXinJia() {
        bitField0_ = (bitField0_ & ~0x00000004);
        zuiXinJia_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 KaiPanJia = 4;
      private long kaiPanJia_ ;
      /**
       * <code>optional int64 KaiPanJia = 4;</code>
       *
       * <pre>
       *今开
       * </pre>
       */
      public boolean hasKaiPanJia() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 KaiPanJia = 4;</code>
       *
       * <pre>
       *今开
       * </pre>
       */
      public long getKaiPanJia() {
        return kaiPanJia_;
      }
      /**
       * <code>optional int64 KaiPanJia = 4;</code>
       *
       * <pre>
       *今开
       * </pre>
       */
      public Builder setKaiPanJia(long value) {
        bitField0_ |= 0x00000008;
        kaiPanJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 KaiPanJia = 4;</code>
       *
       * <pre>
       *今开
       * </pre>
       */
      public Builder clearKaiPanJia() {
        bitField0_ = (bitField0_ & ~0x00000008);
        kaiPanJia_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ZuiGaoJia = 5;
      private long zuiGaoJia_ ;
      /**
       * <code>optional int64 ZuiGaoJia = 5;</code>
       *
       * <pre>
       *最高
       * </pre>
       */
      public boolean hasZuiGaoJia() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 ZuiGaoJia = 5;</code>
       *
       * <pre>
       *最高
       * </pre>
       */
      public long getZuiGaoJia() {
        return zuiGaoJia_;
      }
      /**
       * <code>optional int64 ZuiGaoJia = 5;</code>
       *
       * <pre>
       *最高
       * </pre>
       */
      public Builder setZuiGaoJia(long value) {
        bitField0_ |= 0x00000010;
        zuiGaoJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZuiGaoJia = 5;</code>
       *
       * <pre>
       *最高
       * </pre>
       */
      public Builder clearZuiGaoJia() {
        bitField0_ = (bitField0_ & ~0x00000010);
        zuiGaoJia_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ZuiDiJia = 6;
      private long zuiDiJia_ ;
      /**
       * <code>optional int64 ZuiDiJia = 6;</code>
       *
       * <pre>
       *最低
       * </pre>
       */
      public boolean hasZuiDiJia() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 ZuiDiJia = 6;</code>
       *
       * <pre>
       *最低
       * </pre>
       */
      public long getZuiDiJia() {
        return zuiDiJia_;
      }
      /**
       * <code>optional int64 ZuiDiJia = 6;</code>
       *
       * <pre>
       *最低
       * </pre>
       */
      public Builder setZuiDiJia(long value) {
        bitField0_ |= 0x00000020;
        zuiDiJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZuiDiJia = 6;</code>
       *
       * <pre>
       *最低
       * </pre>
       */
      public Builder clearZuiDiJia() {
        bitField0_ = (bitField0_ & ~0x00000020);
        zuiDiJia_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ZuoShou = 7;
      private long zuoShou_ ;
      /**
       * <code>optional int64 ZuoShou = 7;</code>
       *
       * <pre>
       *昨收
       * </pre>
       */
      public boolean hasZuoShou() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 ZuoShou = 7;</code>
       *
       * <pre>
       *昨收
       * </pre>
       */
      public long getZuoShou() {
        return zuoShou_;
      }
      /**
       * <code>optional int64 ZuoShou = 7;</code>
       *
       * <pre>
       *昨收
       * </pre>
       */
      public Builder setZuoShou(long value) {
        bitField0_ |= 0x00000040;
        zuoShou_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZuoShou = 7;</code>
       *
       * <pre>
       *昨收
       * </pre>
       */
      public Builder clearZuoShou() {
        bitField0_ = (bitField0_ & ~0x00000040);
        zuoShou_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 JunJia = 8;
      private long junJia_ ;
      /**
       * <code>optional int64 JunJia = 8;</code>
       *
       * <pre>
       *均价
       * </pre>
       */
      public boolean hasJunJia() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 JunJia = 8;</code>
       *
       * <pre>
       *均价
       * </pre>
       */
      public long getJunJia() {
        return junJia_;
      }
      /**
       * <code>optional int64 JunJia = 8;</code>
       *
       * <pre>
       *均价
       * </pre>
       */
      public Builder setJunJia(long value) {
        bitField0_ |= 0x00000080;
        junJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JunJia = 8;</code>
       *
       * <pre>
       *均价
       * </pre>
       */
      public Builder clearJunJia() {
        bitField0_ = (bitField0_ & ~0x00000080);
        junJia_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ZhangDie = 9;
      private long zhangDie_ ;
      /**
       * <code>optional int64 ZhangDie = 9;</code>
       *
       * <pre>
       *涨跌
       * </pre>
       */
      public boolean hasZhangDie() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 ZhangDie = 9;</code>
       *
       * <pre>
       *涨跌
       * </pre>
       */
      public long getZhangDie() {
        return zhangDie_;
      }
      /**
       * <code>optional int64 ZhangDie = 9;</code>
       *
       * <pre>
       *涨跌
       * </pre>
       */
      public Builder setZhangDie(long value) {
        bitField0_ |= 0x00000100;
        zhangDie_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZhangDie = 9;</code>
       *
       * <pre>
       *涨跌
       * </pre>
       */
      public Builder clearZhangDie() {
        bitField0_ = (bitField0_ & ~0x00000100);
        zhangDie_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ZhangFu = 10;
      private long zhangFu_ ;
      /**
       * <code>optional int64 ZhangFu = 10;</code>
       *
       * <pre>
       *涨幅
       * </pre>
       */
      public boolean hasZhangFu() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 ZhangFu = 10;</code>
       *
       * <pre>
       *涨幅
       * </pre>
       */
      public long getZhangFu() {
        return zhangFu_;
      }
      /**
       * <code>optional int64 ZhangFu = 10;</code>
       *
       * <pre>
       *涨幅
       * </pre>
       */
      public Builder setZhangFu(long value) {
        bitField0_ |= 0x00000200;
        zhangFu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZhangFu = 10;</code>
       *
       * <pre>
       *涨幅
       * </pre>
       */
      public Builder clearZhangFu() {
        bitField0_ = (bitField0_ & ~0x00000200);
        zhangFu_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ZhenFu = 11;
      private long zhenFu_ ;
      /**
       * <code>optional int64 ZhenFu = 11;</code>
       *
       * <pre>
       *振幅
       * </pre>
       */
      public boolean hasZhenFu() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 ZhenFu = 11;</code>
       *
       * <pre>
       *振幅
       * </pre>
       */
      public long getZhenFu() {
        return zhenFu_;
      }
      /**
       * <code>optional int64 ZhenFu = 11;</code>
       *
       * <pre>
       *振幅
       * </pre>
       */
      public Builder setZhenFu(long value) {
        bitField0_ |= 0x00000400;
        zhenFu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZhenFu = 11;</code>
       *
       * <pre>
       *振幅
       * </pre>
       */
      public Builder clearZhenFu() {
        bitField0_ = (bitField0_ & ~0x00000400);
        zhenFu_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ChengJiaoLiang = 12;
      private long chengJiaoLiang_ ;
      /**
       * <code>optional int64 ChengJiaoLiang = 12;</code>
       *
       * <pre>
       *总手-总成交量，单位股
       * </pre>
       */
      public boolean hasChengJiaoLiang() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 ChengJiaoLiang = 12;</code>
       *
       * <pre>
       *总手-总成交量，单位股
       * </pre>
       */
      public long getChengJiaoLiang() {
        return chengJiaoLiang_;
      }
      /**
       * <code>optional int64 ChengJiaoLiang = 12;</code>
       *
       * <pre>
       *总手-总成交量，单位股
       * </pre>
       */
      public Builder setChengJiaoLiang(long value) {
        bitField0_ |= 0x00000800;
        chengJiaoLiang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ChengJiaoLiang = 12;</code>
       *
       * <pre>
       *总手-总成交量，单位股
       * </pre>
       */
      public Builder clearChengJiaoLiang() {
        bitField0_ = (bitField0_ & ~0x00000800);
        chengJiaoLiang_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 XianShou = 13;
      private long xianShou_ ;
      /**
       * <code>optional int64 XianShou = 13;</code>
       *
       * <pre>
       *现手-最新一笔交量，单位股
       * </pre>
       */
      public boolean hasXianShou() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 XianShou = 13;</code>
       *
       * <pre>
       *现手-最新一笔交量，单位股
       * </pre>
       */
      public long getXianShou() {
        return xianShou_;
      }
      /**
       * <code>optional int64 XianShou = 13;</code>
       *
       * <pre>
       *现手-最新一笔交量，单位股
       * </pre>
       */
      public Builder setXianShou(long value) {
        bitField0_ |= 0x00001000;
        xianShou_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 XianShou = 13;</code>
       *
       * <pre>
       *现手-最新一笔交量，单位股
       * </pre>
       */
      public Builder clearXianShou() {
        bitField0_ = (bitField0_ & ~0x00001000);
        xianShou_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ChengJiaoE = 14;
      private long chengJiaoE_ ;
      /**
       * <code>optional int64 ChengJiaoE = 14;</code>
       *
       * <pre>
       *总成交额
       * </pre>
       */
      public boolean hasChengJiaoE() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 ChengJiaoE = 14;</code>
       *
       * <pre>
       *总成交额
       * </pre>
       */
      public long getChengJiaoE() {
        return chengJiaoE_;
      }
      /**
       * <code>optional int64 ChengJiaoE = 14;</code>
       *
       * <pre>
       *总成交额
       * </pre>
       */
      public Builder setChengJiaoE(long value) {
        bitField0_ |= 0x00002000;
        chengJiaoE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ChengJiaoE = 14;</code>
       *
       * <pre>
       *总成交额
       * </pre>
       */
      public Builder clearChengJiaoE() {
        bitField0_ = (bitField0_ & ~0x00002000);
        chengJiaoE_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ZongChengJiaoBiShu = 15;
      private long zongChengJiaoBiShu_ ;
      /**
       * <code>optional int64 ZongChengJiaoBiShu = 15;</code>
       *
       * <pre>
       *总成交笔数
       * </pre>
       */
      public boolean hasZongChengJiaoBiShu() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 ZongChengJiaoBiShu = 15;</code>
       *
       * <pre>
       *总成交笔数
       * </pre>
       */
      public long getZongChengJiaoBiShu() {
        return zongChengJiaoBiShu_;
      }
      /**
       * <code>optional int64 ZongChengJiaoBiShu = 15;</code>
       *
       * <pre>
       *总成交笔数
       * </pre>
       */
      public Builder setZongChengJiaoBiShu(long value) {
        bitField0_ |= 0x00004000;
        zongChengJiaoBiShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZongChengJiaoBiShu = 15;</code>
       *
       * <pre>
       *总成交笔数
       * </pre>
       */
      public Builder clearZongChengJiaoBiShu() {
        bitField0_ = (bitField0_ & ~0x00004000);
        zongChengJiaoBiShu_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 MeiBiChengJiaoGuShu = 16;
      private long meiBiChengJiaoGuShu_ ;
      /**
       * <code>optional int64 MeiBiChengJiaoGuShu = 16;</code>
       *
       * <pre>
       *每笔成交股数
       * </pre>
       */
      public boolean hasMeiBiChengJiaoGuShu() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 MeiBiChengJiaoGuShu = 16;</code>
       *
       * <pre>
       *每笔成交股数
       * </pre>
       */
      public long getMeiBiChengJiaoGuShu() {
        return meiBiChengJiaoGuShu_;
      }
      /**
       * <code>optional int64 MeiBiChengJiaoGuShu = 16;</code>
       *
       * <pre>
       *每笔成交股数
       * </pre>
       */
      public Builder setMeiBiChengJiaoGuShu(long value) {
        bitField0_ |= 0x00008000;
        meiBiChengJiaoGuShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MeiBiChengJiaoGuShu = 16;</code>
       *
       * <pre>
       *每笔成交股数
       * </pre>
       */
      public Builder clearMeiBiChengJiaoGuShu() {
        bitField0_ = (bitField0_ & ~0x00008000);
        meiBiChengJiaoGuShu_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 HuanShou = 17;
      private long huanShou_ ;
      /**
       * <code>optional int64 HuanShou = 17;</code>
       *
       * <pre>
       *换手,千分比
       * </pre>
       */
      public boolean hasHuanShou() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 HuanShou = 17;</code>
       *
       * <pre>
       *换手,千分比
       * </pre>
       */
      public long getHuanShou() {
        return huanShou_;
      }
      /**
       * <code>optional int64 HuanShou = 17;</code>
       *
       * <pre>
       *换手,千分比
       * </pre>
       */
      public Builder setHuanShou(long value) {
        bitField0_ |= 0x00010000;
        huanShou_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 HuanShou = 17;</code>
       *
       * <pre>
       *换手,千分比
       * </pre>
       */
      public Builder clearHuanShou() {
        bitField0_ = (bitField0_ & ~0x00010000);
        huanShou_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 LiangBi = 18;
      private long liangBi_ ;
      /**
       * <code>optional int64 LiangBi = 18;</code>
       *
       * <pre>
       *量比,千分比
       * </pre>
       */
      public boolean hasLiangBi() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 LiangBi = 18;</code>
       *
       * <pre>
       *量比,千分比
       * </pre>
       */
      public long getLiangBi() {
        return liangBi_;
      }
      /**
       * <code>optional int64 LiangBi = 18;</code>
       *
       * <pre>
       *量比,千分比
       * </pre>
       */
      public Builder setLiangBi(long value) {
        bitField0_ |= 0x00020000;
        liangBi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 LiangBi = 18;</code>
       *
       * <pre>
       *量比,千分比
       * </pre>
       */
      public Builder clearLiangBi() {
        bitField0_ = (bitField0_ & ~0x00020000);
        liangBi_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 NeiPan = 19;
      private long neiPan_ ;
      /**
       * <code>optional int64 NeiPan = 19;</code>
       *
       * <pre>
       *内盘
       * </pre>
       */
      public boolean hasNeiPan() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 NeiPan = 19;</code>
       *
       * <pre>
       *内盘
       * </pre>
       */
      public long getNeiPan() {
        return neiPan_;
      }
      /**
       * <code>optional int64 NeiPan = 19;</code>
       *
       * <pre>
       *内盘
       * </pre>
       */
      public Builder setNeiPan(long value) {
        bitField0_ |= 0x00040000;
        neiPan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 NeiPan = 19;</code>
       *
       * <pre>
       *内盘
       * </pre>
       */
      public Builder clearNeiPan() {
        bitField0_ = (bitField0_ & ~0x00040000);
        neiPan_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WaiPan = 20;
      private long waiPan_ ;
      /**
       * <code>optional int64 WaiPan = 20;</code>
       *
       * <pre>
       *外盘
       * </pre>
       */
      public boolean hasWaiPan() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 WaiPan = 20;</code>
       *
       * <pre>
       *外盘
       * </pre>
       */
      public long getWaiPan() {
        return waiPan_;
      }
      /**
       * <code>optional int64 WaiPan = 20;</code>
       *
       * <pre>
       *外盘
       * </pre>
       */
      public Builder setWaiPan(long value) {
        bitField0_ |= 0x00080000;
        waiPan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WaiPan = 20;</code>
       *
       * <pre>
       *外盘
       * </pre>
       */
      public Builder clearWaiPan() {
        bitField0_ = (bitField0_ & ~0x00080000);
        waiPan_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ZongMaiRu = 21;
      private long zongMaiRu_ ;
      /**
       * <code>optional int64 ZongMaiRu = 21;</code>
       *
       * <pre>
       *lv2数据
       * </pre>
       */
      public boolean hasZongMaiRu() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int64 ZongMaiRu = 21;</code>
       *
       * <pre>
       *lv2数据
       * </pre>
       */
      public long getZongMaiRu() {
        return zongMaiRu_;
      }
      /**
       * <code>optional int64 ZongMaiRu = 21;</code>
       *
       * <pre>
       *lv2数据
       * </pre>
       */
      public Builder setZongMaiRu(long value) {
        bitField0_ |= 0x00100000;
        zongMaiRu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZongMaiRu = 21;</code>
       *
       * <pre>
       *lv2数据
       * </pre>
       */
      public Builder clearZongMaiRu() {
        bitField0_ = (bitField0_ & ~0x00100000);
        zongMaiRu_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ZongMaiChu = 22;
      private long zongMaiChu_ ;
      /**
       * <code>optional int64 ZongMaiChu = 22;</code>
       *
       * <pre>
       *总卖
       * </pre>
       */
      public boolean hasZongMaiChu() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int64 ZongMaiChu = 22;</code>
       *
       * <pre>
       *总卖
       * </pre>
       */
      public long getZongMaiChu() {
        return zongMaiChu_;
      }
      /**
       * <code>optional int64 ZongMaiChu = 22;</code>
       *
       * <pre>
       *总卖
       * </pre>
       */
      public Builder setZongMaiChu(long value) {
        bitField0_ |= 0x00200000;
        zongMaiChu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZongMaiChu = 22;</code>
       *
       * <pre>
       *总卖
       * </pre>
       */
      public Builder clearZongMaiChu() {
        bitField0_ = (bitField0_ & ~0x00200000);
        zongMaiChu_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ZongMaiRuJunJia = 23;
      private long zongMaiRuJunJia_ ;
      /**
       * <code>optional int64 ZongMaiRuJunJia = 23;</code>
       *
       * <pre>
       *总买均价
       * </pre>
       */
      public boolean hasZongMaiRuJunJia() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int64 ZongMaiRuJunJia = 23;</code>
       *
       * <pre>
       *总买均价
       * </pre>
       */
      public long getZongMaiRuJunJia() {
        return zongMaiRuJunJia_;
      }
      /**
       * <code>optional int64 ZongMaiRuJunJia = 23;</code>
       *
       * <pre>
       *总买均价
       * </pre>
       */
      public Builder setZongMaiRuJunJia(long value) {
        bitField0_ |= 0x00400000;
        zongMaiRuJunJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZongMaiRuJunJia = 23;</code>
       *
       * <pre>
       *总买均价
       * </pre>
       */
      public Builder clearZongMaiRuJunJia() {
        bitField0_ = (bitField0_ & ~0x00400000);
        zongMaiRuJunJia_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 ZongMaiChuJunJia = 24;
      private long zongMaiChuJunJia_ ;
      /**
       * <code>optional int64 ZongMaiChuJunJia = 24;</code>
       *
       * <pre>
       *总卖均价
       * </pre>
       */
      public boolean hasZongMaiChuJunJia() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 ZongMaiChuJunJia = 24;</code>
       *
       * <pre>
       *总卖均价
       * </pre>
       */
      public long getZongMaiChuJunJia() {
        return zongMaiChuJunJia_;
      }
      /**
       * <code>optional int64 ZongMaiChuJunJia = 24;</code>
       *
       * <pre>
       *总卖均价
       * </pre>
       */
      public Builder setZongMaiChuJunJia(long value) {
        bitField0_ |= 0x00800000;
        zongMaiChuJunJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZongMaiChuJunJia = 24;</code>
       *
       * <pre>
       *总卖均价
       * </pre>
       */
      public Builder clearZongMaiChuJunJia() {
        bitField0_ = (bitField0_ & ~0x00800000);
        zongMaiChuJunJia_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dzhyun.GeGuDongTai)
    }

    static {
      defaultInstance = new GeGuDongTai(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dzhyun.GeGuDongTai)
  }

  public interface MaiMaiPanOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 Id = 1;
    /**
     * <code>required int64 Id = 1;</code>
     *
     * <pre>
     *序号
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int64 Id = 1;</code>
     *
     * <pre>
     *序号
     * </pre>
     */
    long getId();

    // required int64 ShiJian = 2;
    /**
     * <code>required int64 ShiJian = 2;</code>
     *
     * <pre>
     *时间
     * </pre>
     */
    boolean hasShiJian();
    /**
     * <code>required int64 ShiJian = 2;</code>
     *
     * <pre>
     *时间
     * </pre>
     */
    long getShiJian();

    // optional int64 WeiTuoMaiRuJia1 = 3;
    /**
     * <code>optional int64 WeiTuoMaiRuJia1 = 3;</code>
     *
     * <pre>
     *5档委托盘
     * </pre>
     */
    boolean hasWeiTuoMaiRuJia1();
    /**
     * <code>optional int64 WeiTuoMaiRuJia1 = 3;</code>
     *
     * <pre>
     *5档委托盘
     * </pre>
     */
    long getWeiTuoMaiRuJia1();

    // optional int64 WeiTuoMaiRuLiang1 = 4;
    /**
     * <code>optional int64 WeiTuoMaiRuLiang1 = 4;</code>
     *
     * <pre>
     *委托买入量1，单位股
     * </pre>
     */
    boolean hasWeiTuoMaiRuLiang1();
    /**
     * <code>optional int64 WeiTuoMaiRuLiang1 = 4;</code>
     *
     * <pre>
     *委托买入量1，单位股
     * </pre>
     */
    long getWeiTuoMaiRuLiang1();

    // optional int64 WeiTuoMaiRuJia2 = 5;
    /**
     * <code>optional int64 WeiTuoMaiRuJia2 = 5;</code>
     *
     * <pre>
     *委托买入价2
     * </pre>
     */
    boolean hasWeiTuoMaiRuJia2();
    /**
     * <code>optional int64 WeiTuoMaiRuJia2 = 5;</code>
     *
     * <pre>
     *委托买入价2
     * </pre>
     */
    long getWeiTuoMaiRuJia2();

    // optional int64 WeiTuoMaiRuLiang2 = 6;
    /**
     * <code>optional int64 WeiTuoMaiRuLiang2 = 6;</code>
     *
     * <pre>
     *委托买入量2，单位股
     * </pre>
     */
    boolean hasWeiTuoMaiRuLiang2();
    /**
     * <code>optional int64 WeiTuoMaiRuLiang2 = 6;</code>
     *
     * <pre>
     *委托买入量2，单位股
     * </pre>
     */
    long getWeiTuoMaiRuLiang2();

    // optional int64 WeiTuoMaiRuJia3 = 7;
    /**
     * <code>optional int64 WeiTuoMaiRuJia3 = 7;</code>
     *
     * <pre>
     *委托买入价3
     * </pre>
     */
    boolean hasWeiTuoMaiRuJia3();
    /**
     * <code>optional int64 WeiTuoMaiRuJia3 = 7;</code>
     *
     * <pre>
     *委托买入价3
     * </pre>
     */
    long getWeiTuoMaiRuJia3();

    // optional int64 WeiTuoMaiRuLiang3 = 8;
    /**
     * <code>optional int64 WeiTuoMaiRuLiang3 = 8;</code>
     *
     * <pre>
     *委托买入量3，单位股
     * </pre>
     */
    boolean hasWeiTuoMaiRuLiang3();
    /**
     * <code>optional int64 WeiTuoMaiRuLiang3 = 8;</code>
     *
     * <pre>
     *委托买入量3，单位股
     * </pre>
     */
    long getWeiTuoMaiRuLiang3();

    // optional int64 WeiTuoMaiRuJia4 = 9;
    /**
     * <code>optional int64 WeiTuoMaiRuJia4 = 9;</code>
     *
     * <pre>
     *委托买入价4
     * </pre>
     */
    boolean hasWeiTuoMaiRuJia4();
    /**
     * <code>optional int64 WeiTuoMaiRuJia4 = 9;</code>
     *
     * <pre>
     *委托买入价4
     * </pre>
     */
    long getWeiTuoMaiRuJia4();

    // optional int64 WeiTuoMaiRuLiang4 = 10;
    /**
     * <code>optional int64 WeiTuoMaiRuLiang4 = 10;</code>
     *
     * <pre>
     *委托买入量4，单位股
     * </pre>
     */
    boolean hasWeiTuoMaiRuLiang4();
    /**
     * <code>optional int64 WeiTuoMaiRuLiang4 = 10;</code>
     *
     * <pre>
     *委托买入量4，单位股
     * </pre>
     */
    long getWeiTuoMaiRuLiang4();

    // optional int64 WeiTuoMaiRuJia5 = 11;
    /**
     * <code>optional int64 WeiTuoMaiRuJia5 = 11;</code>
     *
     * <pre>
     *委托买入价5
     * </pre>
     */
    boolean hasWeiTuoMaiRuJia5();
    /**
     * <code>optional int64 WeiTuoMaiRuJia5 = 11;</code>
     *
     * <pre>
     *委托买入价5
     * </pre>
     */
    long getWeiTuoMaiRuJia5();

    // optional int64 WeiTuoMaiRuLiang5 = 12;
    /**
     * <code>optional int64 WeiTuoMaiRuLiang5 = 12;</code>
     *
     * <pre>
     *委托买入量5，单位股
     * </pre>
     */
    boolean hasWeiTuoMaiRuLiang5();
    /**
     * <code>optional int64 WeiTuoMaiRuLiang5 = 12;</code>
     *
     * <pre>
     *委托买入量5，单位股
     * </pre>
     */
    long getWeiTuoMaiRuLiang5();

    // optional int64 WeiTuoMaiChuJia1 = 13;
    /**
     * <code>optional int64 WeiTuoMaiChuJia1 = 13;</code>
     *
     * <pre>
     *委托卖出价1
     * </pre>
     */
    boolean hasWeiTuoMaiChuJia1();
    /**
     * <code>optional int64 WeiTuoMaiChuJia1 = 13;</code>
     *
     * <pre>
     *委托卖出价1
     * </pre>
     */
    long getWeiTuoMaiChuJia1();

    // optional int64 WeiTuoMaiChuLiang1 = 14;
    /**
     * <code>optional int64 WeiTuoMaiChuLiang1 = 14;</code>
     *
     * <pre>
     *委托卖出量1，单位股
     * </pre>
     */
    boolean hasWeiTuoMaiChuLiang1();
    /**
     * <code>optional int64 WeiTuoMaiChuLiang1 = 14;</code>
     *
     * <pre>
     *委托卖出量1，单位股
     * </pre>
     */
    long getWeiTuoMaiChuLiang1();

    // optional int64 WeiTuoMaiChuJia2 = 15;
    /**
     * <code>optional int64 WeiTuoMaiChuJia2 = 15;</code>
     *
     * <pre>
     *委托卖出价2
     * </pre>
     */
    boolean hasWeiTuoMaiChuJia2();
    /**
     * <code>optional int64 WeiTuoMaiChuJia2 = 15;</code>
     *
     * <pre>
     *委托卖出价2
     * </pre>
     */
    long getWeiTuoMaiChuJia2();

    // optional int64 WeiTuoMaiChuLiang2 = 16;
    /**
     * <code>optional int64 WeiTuoMaiChuLiang2 = 16;</code>
     *
     * <pre>
     *委托卖出量2，单位股
     * </pre>
     */
    boolean hasWeiTuoMaiChuLiang2();
    /**
     * <code>optional int64 WeiTuoMaiChuLiang2 = 16;</code>
     *
     * <pre>
     *委托卖出量2，单位股
     * </pre>
     */
    long getWeiTuoMaiChuLiang2();

    // optional int64 WeiTuoMaiChuJia3 = 17;
    /**
     * <code>optional int64 WeiTuoMaiChuJia3 = 17;</code>
     *
     * <pre>
     *委托卖出价3
     * </pre>
     */
    boolean hasWeiTuoMaiChuJia3();
    /**
     * <code>optional int64 WeiTuoMaiChuJia3 = 17;</code>
     *
     * <pre>
     *委托卖出价3
     * </pre>
     */
    long getWeiTuoMaiChuJia3();

    // optional int64 WeiTuoMaiChuLiang3 = 18;
    /**
     * <code>optional int64 WeiTuoMaiChuLiang3 = 18;</code>
     *
     * <pre>
     *委托卖出量3，单位股
     * </pre>
     */
    boolean hasWeiTuoMaiChuLiang3();
    /**
     * <code>optional int64 WeiTuoMaiChuLiang3 = 18;</code>
     *
     * <pre>
     *委托卖出量3，单位股
     * </pre>
     */
    long getWeiTuoMaiChuLiang3();

    // optional int64 WeiTuoMaiChuJia4 = 19;
    /**
     * <code>optional int64 WeiTuoMaiChuJia4 = 19;</code>
     *
     * <pre>
     *委托卖出价4
     * </pre>
     */
    boolean hasWeiTuoMaiChuJia4();
    /**
     * <code>optional int64 WeiTuoMaiChuJia4 = 19;</code>
     *
     * <pre>
     *委托卖出价4
     * </pre>
     */
    long getWeiTuoMaiChuJia4();

    // optional int64 WeiTuoMaiChuLiang4 = 20;
    /**
     * <code>optional int64 WeiTuoMaiChuLiang4 = 20;</code>
     *
     * <pre>
     *委托卖出量4，单位股
     * </pre>
     */
    boolean hasWeiTuoMaiChuLiang4();
    /**
     * <code>optional int64 WeiTuoMaiChuLiang4 = 20;</code>
     *
     * <pre>
     *委托卖出量4，单位股
     * </pre>
     */
    long getWeiTuoMaiChuLiang4();

    // optional int64 WeiTuoMaiChuJia5 = 21;
    /**
     * <code>optional int64 WeiTuoMaiChuJia5 = 21;</code>
     *
     * <pre>
     *委托卖出价5
     * </pre>
     */
    boolean hasWeiTuoMaiChuJia5();
    /**
     * <code>optional int64 WeiTuoMaiChuJia5 = 21;</code>
     *
     * <pre>
     *委托卖出价5
     * </pre>
     */
    long getWeiTuoMaiChuJia5();

    // optional int64 WeiTuoMaiChuLiang5 = 22;
    /**
     * <code>optional int64 WeiTuoMaiChuLiang5 = 22;</code>
     *
     * <pre>
     *委托卖出量5，单位股
     * </pre>
     */
    boolean hasWeiTuoMaiChuLiang5();
    /**
     * <code>optional int64 WeiTuoMaiChuLiang5 = 22;</code>
     *
     * <pre>
     *委托卖出量5，单位股
     * </pre>
     */
    long getWeiTuoMaiChuLiang5();
  }
  /**
   * Protobuf type {@code dzhyun.MaiMaiPan}
   */
  public static final class MaiMaiPan extends
      com.google.protobuf.GeneratedMessage
      implements MaiMaiPanOrBuilder {
    // Use MaiMaiPan.newBuilder() to construct.
    private MaiMaiPan(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MaiMaiPan(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MaiMaiPan defaultInstance;
    public static MaiMaiPan getDefaultInstance() {
      return defaultInstance;
    }

    public MaiMaiPan getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MaiMaiPan(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              shiJian_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              weiTuoMaiRuJia1_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              weiTuoMaiRuLiang1_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              weiTuoMaiRuJia2_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              weiTuoMaiRuLiang2_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              weiTuoMaiRuJia3_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              weiTuoMaiRuLiang3_ = input.readInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              weiTuoMaiRuJia4_ = input.readInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              weiTuoMaiRuLiang4_ = input.readInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              weiTuoMaiRuJia5_ = input.readInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              weiTuoMaiRuLiang5_ = input.readInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              weiTuoMaiChuJia1_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              weiTuoMaiChuLiang1_ = input.readInt64();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              weiTuoMaiChuJia2_ = input.readInt64();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              weiTuoMaiChuLiang2_ = input.readInt64();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              weiTuoMaiChuJia3_ = input.readInt64();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              weiTuoMaiChuLiang3_ = input.readInt64();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              weiTuoMaiChuJia4_ = input.readInt64();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              weiTuoMaiChuLiang4_ = input.readInt64();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              weiTuoMaiChuJia5_ = input.readInt64();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              weiTuoMaiChuLiang5_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dzhyun.proto.DzhyunGupiaoqiepian.internal_static_dzhyun_MaiMaiPan_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dzhyun.proto.DzhyunGupiaoqiepian.internal_static_dzhyun_MaiMaiPan_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan.class, com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan.Builder.class);
    }

    public static com.google.protobuf.Parser<MaiMaiPan> PARSER =
        new com.google.protobuf.AbstractParser<MaiMaiPan>() {
      public MaiMaiPan parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MaiMaiPan(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MaiMaiPan> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 Id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required int64 Id = 1;</code>
     *
     * <pre>
     *序号
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 Id = 1;</code>
     *
     * <pre>
     *序号
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // required int64 ShiJian = 2;
    public static final int SHIJIAN_FIELD_NUMBER = 2;
    private long shiJian_;
    /**
     * <code>required int64 ShiJian = 2;</code>
     *
     * <pre>
     *时间
     * </pre>
     */
    public boolean hasShiJian() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 ShiJian = 2;</code>
     *
     * <pre>
     *时间
     * </pre>
     */
    public long getShiJian() {
      return shiJian_;
    }

    // optional int64 WeiTuoMaiRuJia1 = 3;
    public static final int WEITUOMAIRUJIA1_FIELD_NUMBER = 3;
    private long weiTuoMaiRuJia1_;
    /**
     * <code>optional int64 WeiTuoMaiRuJia1 = 3;</code>
     *
     * <pre>
     *5档委托盘
     * </pre>
     */
    public boolean hasWeiTuoMaiRuJia1() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuJia1 = 3;</code>
     *
     * <pre>
     *5档委托盘
     * </pre>
     */
    public long getWeiTuoMaiRuJia1() {
      return weiTuoMaiRuJia1_;
    }

    // optional int64 WeiTuoMaiRuLiang1 = 4;
    public static final int WEITUOMAIRULIANG1_FIELD_NUMBER = 4;
    private long weiTuoMaiRuLiang1_;
    /**
     * <code>optional int64 WeiTuoMaiRuLiang1 = 4;</code>
     *
     * <pre>
     *委托买入量1，单位股
     * </pre>
     */
    public boolean hasWeiTuoMaiRuLiang1() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuLiang1 = 4;</code>
     *
     * <pre>
     *委托买入量1，单位股
     * </pre>
     */
    public long getWeiTuoMaiRuLiang1() {
      return weiTuoMaiRuLiang1_;
    }

    // optional int64 WeiTuoMaiRuJia2 = 5;
    public static final int WEITUOMAIRUJIA2_FIELD_NUMBER = 5;
    private long weiTuoMaiRuJia2_;
    /**
     * <code>optional int64 WeiTuoMaiRuJia2 = 5;</code>
     *
     * <pre>
     *委托买入价2
     * </pre>
     */
    public boolean hasWeiTuoMaiRuJia2() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuJia2 = 5;</code>
     *
     * <pre>
     *委托买入价2
     * </pre>
     */
    public long getWeiTuoMaiRuJia2() {
      return weiTuoMaiRuJia2_;
    }

    // optional int64 WeiTuoMaiRuLiang2 = 6;
    public static final int WEITUOMAIRULIANG2_FIELD_NUMBER = 6;
    private long weiTuoMaiRuLiang2_;
    /**
     * <code>optional int64 WeiTuoMaiRuLiang2 = 6;</code>
     *
     * <pre>
     *委托买入量2，单位股
     * </pre>
     */
    public boolean hasWeiTuoMaiRuLiang2() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuLiang2 = 6;</code>
     *
     * <pre>
     *委托买入量2，单位股
     * </pre>
     */
    public long getWeiTuoMaiRuLiang2() {
      return weiTuoMaiRuLiang2_;
    }

    // optional int64 WeiTuoMaiRuJia3 = 7;
    public static final int WEITUOMAIRUJIA3_FIELD_NUMBER = 7;
    private long weiTuoMaiRuJia3_;
    /**
     * <code>optional int64 WeiTuoMaiRuJia3 = 7;</code>
     *
     * <pre>
     *委托买入价3
     * </pre>
     */
    public boolean hasWeiTuoMaiRuJia3() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuJia3 = 7;</code>
     *
     * <pre>
     *委托买入价3
     * </pre>
     */
    public long getWeiTuoMaiRuJia3() {
      return weiTuoMaiRuJia3_;
    }

    // optional int64 WeiTuoMaiRuLiang3 = 8;
    public static final int WEITUOMAIRULIANG3_FIELD_NUMBER = 8;
    private long weiTuoMaiRuLiang3_;
    /**
     * <code>optional int64 WeiTuoMaiRuLiang3 = 8;</code>
     *
     * <pre>
     *委托买入量3，单位股
     * </pre>
     */
    public boolean hasWeiTuoMaiRuLiang3() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuLiang3 = 8;</code>
     *
     * <pre>
     *委托买入量3，单位股
     * </pre>
     */
    public long getWeiTuoMaiRuLiang3() {
      return weiTuoMaiRuLiang3_;
    }

    // optional int64 WeiTuoMaiRuJia4 = 9;
    public static final int WEITUOMAIRUJIA4_FIELD_NUMBER = 9;
    private long weiTuoMaiRuJia4_;
    /**
     * <code>optional int64 WeiTuoMaiRuJia4 = 9;</code>
     *
     * <pre>
     *委托买入价4
     * </pre>
     */
    public boolean hasWeiTuoMaiRuJia4() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuJia4 = 9;</code>
     *
     * <pre>
     *委托买入价4
     * </pre>
     */
    public long getWeiTuoMaiRuJia4() {
      return weiTuoMaiRuJia4_;
    }

    // optional int64 WeiTuoMaiRuLiang4 = 10;
    public static final int WEITUOMAIRULIANG4_FIELD_NUMBER = 10;
    private long weiTuoMaiRuLiang4_;
    /**
     * <code>optional int64 WeiTuoMaiRuLiang4 = 10;</code>
     *
     * <pre>
     *委托买入量4，单位股
     * </pre>
     */
    public boolean hasWeiTuoMaiRuLiang4() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuLiang4 = 10;</code>
     *
     * <pre>
     *委托买入量4，单位股
     * </pre>
     */
    public long getWeiTuoMaiRuLiang4() {
      return weiTuoMaiRuLiang4_;
    }

    // optional int64 WeiTuoMaiRuJia5 = 11;
    public static final int WEITUOMAIRUJIA5_FIELD_NUMBER = 11;
    private long weiTuoMaiRuJia5_;
    /**
     * <code>optional int64 WeiTuoMaiRuJia5 = 11;</code>
     *
     * <pre>
     *委托买入价5
     * </pre>
     */
    public boolean hasWeiTuoMaiRuJia5() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuJia5 = 11;</code>
     *
     * <pre>
     *委托买入价5
     * </pre>
     */
    public long getWeiTuoMaiRuJia5() {
      return weiTuoMaiRuJia5_;
    }

    // optional int64 WeiTuoMaiRuLiang5 = 12;
    public static final int WEITUOMAIRULIANG5_FIELD_NUMBER = 12;
    private long weiTuoMaiRuLiang5_;
    /**
     * <code>optional int64 WeiTuoMaiRuLiang5 = 12;</code>
     *
     * <pre>
     *委托买入量5，单位股
     * </pre>
     */
    public boolean hasWeiTuoMaiRuLiang5() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuLiang5 = 12;</code>
     *
     * <pre>
     *委托买入量5，单位股
     * </pre>
     */
    public long getWeiTuoMaiRuLiang5() {
      return weiTuoMaiRuLiang5_;
    }

    // optional int64 WeiTuoMaiChuJia1 = 13;
    public static final int WEITUOMAICHUJIA1_FIELD_NUMBER = 13;
    private long weiTuoMaiChuJia1_;
    /**
     * <code>optional int64 WeiTuoMaiChuJia1 = 13;</code>
     *
     * <pre>
     *委托卖出价1
     * </pre>
     */
    public boolean hasWeiTuoMaiChuJia1() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuJia1 = 13;</code>
     *
     * <pre>
     *委托卖出价1
     * </pre>
     */
    public long getWeiTuoMaiChuJia1() {
      return weiTuoMaiChuJia1_;
    }

    // optional int64 WeiTuoMaiChuLiang1 = 14;
    public static final int WEITUOMAICHULIANG1_FIELD_NUMBER = 14;
    private long weiTuoMaiChuLiang1_;
    /**
     * <code>optional int64 WeiTuoMaiChuLiang1 = 14;</code>
     *
     * <pre>
     *委托卖出量1，单位股
     * </pre>
     */
    public boolean hasWeiTuoMaiChuLiang1() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuLiang1 = 14;</code>
     *
     * <pre>
     *委托卖出量1，单位股
     * </pre>
     */
    public long getWeiTuoMaiChuLiang1() {
      return weiTuoMaiChuLiang1_;
    }

    // optional int64 WeiTuoMaiChuJia2 = 15;
    public static final int WEITUOMAICHUJIA2_FIELD_NUMBER = 15;
    private long weiTuoMaiChuJia2_;
    /**
     * <code>optional int64 WeiTuoMaiChuJia2 = 15;</code>
     *
     * <pre>
     *委托卖出价2
     * </pre>
     */
    public boolean hasWeiTuoMaiChuJia2() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuJia2 = 15;</code>
     *
     * <pre>
     *委托卖出价2
     * </pre>
     */
    public long getWeiTuoMaiChuJia2() {
      return weiTuoMaiChuJia2_;
    }

    // optional int64 WeiTuoMaiChuLiang2 = 16;
    public static final int WEITUOMAICHULIANG2_FIELD_NUMBER = 16;
    private long weiTuoMaiChuLiang2_;
    /**
     * <code>optional int64 WeiTuoMaiChuLiang2 = 16;</code>
     *
     * <pre>
     *委托卖出量2，单位股
     * </pre>
     */
    public boolean hasWeiTuoMaiChuLiang2() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuLiang2 = 16;</code>
     *
     * <pre>
     *委托卖出量2，单位股
     * </pre>
     */
    public long getWeiTuoMaiChuLiang2() {
      return weiTuoMaiChuLiang2_;
    }

    // optional int64 WeiTuoMaiChuJia3 = 17;
    public static final int WEITUOMAICHUJIA3_FIELD_NUMBER = 17;
    private long weiTuoMaiChuJia3_;
    /**
     * <code>optional int64 WeiTuoMaiChuJia3 = 17;</code>
     *
     * <pre>
     *委托卖出价3
     * </pre>
     */
    public boolean hasWeiTuoMaiChuJia3() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuJia3 = 17;</code>
     *
     * <pre>
     *委托卖出价3
     * </pre>
     */
    public long getWeiTuoMaiChuJia3() {
      return weiTuoMaiChuJia3_;
    }

    // optional int64 WeiTuoMaiChuLiang3 = 18;
    public static final int WEITUOMAICHULIANG3_FIELD_NUMBER = 18;
    private long weiTuoMaiChuLiang3_;
    /**
     * <code>optional int64 WeiTuoMaiChuLiang3 = 18;</code>
     *
     * <pre>
     *委托卖出量3，单位股
     * </pre>
     */
    public boolean hasWeiTuoMaiChuLiang3() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuLiang3 = 18;</code>
     *
     * <pre>
     *委托卖出量3，单位股
     * </pre>
     */
    public long getWeiTuoMaiChuLiang3() {
      return weiTuoMaiChuLiang3_;
    }

    // optional int64 WeiTuoMaiChuJia4 = 19;
    public static final int WEITUOMAICHUJIA4_FIELD_NUMBER = 19;
    private long weiTuoMaiChuJia4_;
    /**
     * <code>optional int64 WeiTuoMaiChuJia4 = 19;</code>
     *
     * <pre>
     *委托卖出价4
     * </pre>
     */
    public boolean hasWeiTuoMaiChuJia4() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuJia4 = 19;</code>
     *
     * <pre>
     *委托卖出价4
     * </pre>
     */
    public long getWeiTuoMaiChuJia4() {
      return weiTuoMaiChuJia4_;
    }

    // optional int64 WeiTuoMaiChuLiang4 = 20;
    public static final int WEITUOMAICHULIANG4_FIELD_NUMBER = 20;
    private long weiTuoMaiChuLiang4_;
    /**
     * <code>optional int64 WeiTuoMaiChuLiang4 = 20;</code>
     *
     * <pre>
     *委托卖出量4，单位股
     * </pre>
     */
    public boolean hasWeiTuoMaiChuLiang4() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuLiang4 = 20;</code>
     *
     * <pre>
     *委托卖出量4，单位股
     * </pre>
     */
    public long getWeiTuoMaiChuLiang4() {
      return weiTuoMaiChuLiang4_;
    }

    // optional int64 WeiTuoMaiChuJia5 = 21;
    public static final int WEITUOMAICHUJIA5_FIELD_NUMBER = 21;
    private long weiTuoMaiChuJia5_;
    /**
     * <code>optional int64 WeiTuoMaiChuJia5 = 21;</code>
     *
     * <pre>
     *委托卖出价5
     * </pre>
     */
    public boolean hasWeiTuoMaiChuJia5() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuJia5 = 21;</code>
     *
     * <pre>
     *委托卖出价5
     * </pre>
     */
    public long getWeiTuoMaiChuJia5() {
      return weiTuoMaiChuJia5_;
    }

    // optional int64 WeiTuoMaiChuLiang5 = 22;
    public static final int WEITUOMAICHULIANG5_FIELD_NUMBER = 22;
    private long weiTuoMaiChuLiang5_;
    /**
     * <code>optional int64 WeiTuoMaiChuLiang5 = 22;</code>
     *
     * <pre>
     *委托卖出量5，单位股
     * </pre>
     */
    public boolean hasWeiTuoMaiChuLiang5() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuLiang5 = 22;</code>
     *
     * <pre>
     *委托卖出量5，单位股
     * </pre>
     */
    public long getWeiTuoMaiChuLiang5() {
      return weiTuoMaiChuLiang5_;
    }

    private void initFields() {
      id_ = 0L;
      shiJian_ = 0L;
      weiTuoMaiRuJia1_ = 0L;
      weiTuoMaiRuLiang1_ = 0L;
      weiTuoMaiRuJia2_ = 0L;
      weiTuoMaiRuLiang2_ = 0L;
      weiTuoMaiRuJia3_ = 0L;
      weiTuoMaiRuLiang3_ = 0L;
      weiTuoMaiRuJia4_ = 0L;
      weiTuoMaiRuLiang4_ = 0L;
      weiTuoMaiRuJia5_ = 0L;
      weiTuoMaiRuLiang5_ = 0L;
      weiTuoMaiChuJia1_ = 0L;
      weiTuoMaiChuLiang1_ = 0L;
      weiTuoMaiChuJia2_ = 0L;
      weiTuoMaiChuLiang2_ = 0L;
      weiTuoMaiChuJia3_ = 0L;
      weiTuoMaiChuLiang3_ = 0L;
      weiTuoMaiChuJia4_ = 0L;
      weiTuoMaiChuLiang4_ = 0L;
      weiTuoMaiChuJia5_ = 0L;
      weiTuoMaiChuLiang5_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasShiJian()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, shiJian_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, weiTuoMaiRuJia1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, weiTuoMaiRuLiang1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, weiTuoMaiRuJia2_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, weiTuoMaiRuLiang2_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, weiTuoMaiRuJia3_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, weiTuoMaiRuLiang3_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(9, weiTuoMaiRuJia4_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(10, weiTuoMaiRuLiang4_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(11, weiTuoMaiRuJia5_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(12, weiTuoMaiRuLiang5_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, weiTuoMaiChuJia1_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, weiTuoMaiChuLiang1_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(15, weiTuoMaiChuJia2_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(16, weiTuoMaiChuLiang2_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(17, weiTuoMaiChuJia3_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(18, weiTuoMaiChuLiang3_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(19, weiTuoMaiChuJia4_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(20, weiTuoMaiChuLiang4_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(21, weiTuoMaiChuJia5_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt64(22, weiTuoMaiChuLiang5_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, shiJian_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, weiTuoMaiRuJia1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, weiTuoMaiRuLiang1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, weiTuoMaiRuJia2_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, weiTuoMaiRuLiang2_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, weiTuoMaiRuJia3_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, weiTuoMaiRuLiang3_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, weiTuoMaiRuJia4_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, weiTuoMaiRuLiang4_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, weiTuoMaiRuJia5_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, weiTuoMaiRuLiang5_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, weiTuoMaiChuJia1_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, weiTuoMaiChuLiang1_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, weiTuoMaiChuJia2_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, weiTuoMaiChuLiang2_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, weiTuoMaiChuJia3_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, weiTuoMaiChuLiang3_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, weiTuoMaiChuJia4_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, weiTuoMaiChuLiang4_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(21, weiTuoMaiChuJia5_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(22, weiTuoMaiChuLiang5_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dzhyun.MaiMaiPan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dzhyun.proto.DzhyunGupiaoqiepian.internal_static_dzhyun_MaiMaiPan_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dzhyun.proto.DzhyunGupiaoqiepian.internal_static_dzhyun_MaiMaiPan_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan.class, com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan.Builder.class);
      }

      // Construct using com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        shiJian_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        weiTuoMaiRuJia1_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        weiTuoMaiRuLiang1_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        weiTuoMaiRuJia2_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        weiTuoMaiRuLiang2_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        weiTuoMaiRuJia3_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        weiTuoMaiRuLiang3_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        weiTuoMaiRuJia4_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        weiTuoMaiRuLiang4_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        weiTuoMaiRuJia5_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        weiTuoMaiRuLiang5_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        weiTuoMaiChuJia1_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        weiTuoMaiChuLiang1_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        weiTuoMaiChuJia2_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        weiTuoMaiChuLiang2_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        weiTuoMaiChuJia3_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        weiTuoMaiChuLiang3_ = 0L;
        bitField0_ = (bitField0_ & ~0x00020000);
        weiTuoMaiChuJia4_ = 0L;
        bitField0_ = (bitField0_ & ~0x00040000);
        weiTuoMaiChuLiang4_ = 0L;
        bitField0_ = (bitField0_ & ~0x00080000);
        weiTuoMaiChuJia5_ = 0L;
        bitField0_ = (bitField0_ & ~0x00100000);
        weiTuoMaiChuLiang5_ = 0L;
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dzhyun.proto.DzhyunGupiaoqiepian.internal_static_dzhyun_MaiMaiPan_descriptor;
      }

      public com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan getDefaultInstanceForType() {
        return com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan.getDefaultInstance();
      }

      public com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan build() {
        com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan buildPartial() {
        com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan result = new com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.shiJian_ = shiJian_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.weiTuoMaiRuJia1_ = weiTuoMaiRuJia1_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.weiTuoMaiRuLiang1_ = weiTuoMaiRuLiang1_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.weiTuoMaiRuJia2_ = weiTuoMaiRuJia2_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.weiTuoMaiRuLiang2_ = weiTuoMaiRuLiang2_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.weiTuoMaiRuJia3_ = weiTuoMaiRuJia3_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.weiTuoMaiRuLiang3_ = weiTuoMaiRuLiang3_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.weiTuoMaiRuJia4_ = weiTuoMaiRuJia4_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.weiTuoMaiRuLiang4_ = weiTuoMaiRuLiang4_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.weiTuoMaiRuJia5_ = weiTuoMaiRuJia5_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.weiTuoMaiRuLiang5_ = weiTuoMaiRuLiang5_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.weiTuoMaiChuJia1_ = weiTuoMaiChuJia1_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.weiTuoMaiChuLiang1_ = weiTuoMaiChuLiang1_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.weiTuoMaiChuJia2_ = weiTuoMaiChuJia2_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.weiTuoMaiChuLiang2_ = weiTuoMaiChuLiang2_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.weiTuoMaiChuJia3_ = weiTuoMaiChuJia3_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.weiTuoMaiChuLiang3_ = weiTuoMaiChuLiang3_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.weiTuoMaiChuJia4_ = weiTuoMaiChuJia4_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.weiTuoMaiChuLiang4_ = weiTuoMaiChuLiang4_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.weiTuoMaiChuJia5_ = weiTuoMaiChuJia5_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.weiTuoMaiChuLiang5_ = weiTuoMaiChuLiang5_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan) {
          return mergeFrom((com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan other) {
        if (other == com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasShiJian()) {
          setShiJian(other.getShiJian());
        }
        if (other.hasWeiTuoMaiRuJia1()) {
          setWeiTuoMaiRuJia1(other.getWeiTuoMaiRuJia1());
        }
        if (other.hasWeiTuoMaiRuLiang1()) {
          setWeiTuoMaiRuLiang1(other.getWeiTuoMaiRuLiang1());
        }
        if (other.hasWeiTuoMaiRuJia2()) {
          setWeiTuoMaiRuJia2(other.getWeiTuoMaiRuJia2());
        }
        if (other.hasWeiTuoMaiRuLiang2()) {
          setWeiTuoMaiRuLiang2(other.getWeiTuoMaiRuLiang2());
        }
        if (other.hasWeiTuoMaiRuJia3()) {
          setWeiTuoMaiRuJia3(other.getWeiTuoMaiRuJia3());
        }
        if (other.hasWeiTuoMaiRuLiang3()) {
          setWeiTuoMaiRuLiang3(other.getWeiTuoMaiRuLiang3());
        }
        if (other.hasWeiTuoMaiRuJia4()) {
          setWeiTuoMaiRuJia4(other.getWeiTuoMaiRuJia4());
        }
        if (other.hasWeiTuoMaiRuLiang4()) {
          setWeiTuoMaiRuLiang4(other.getWeiTuoMaiRuLiang4());
        }
        if (other.hasWeiTuoMaiRuJia5()) {
          setWeiTuoMaiRuJia5(other.getWeiTuoMaiRuJia5());
        }
        if (other.hasWeiTuoMaiRuLiang5()) {
          setWeiTuoMaiRuLiang5(other.getWeiTuoMaiRuLiang5());
        }
        if (other.hasWeiTuoMaiChuJia1()) {
          setWeiTuoMaiChuJia1(other.getWeiTuoMaiChuJia1());
        }
        if (other.hasWeiTuoMaiChuLiang1()) {
          setWeiTuoMaiChuLiang1(other.getWeiTuoMaiChuLiang1());
        }
        if (other.hasWeiTuoMaiChuJia2()) {
          setWeiTuoMaiChuJia2(other.getWeiTuoMaiChuJia2());
        }
        if (other.hasWeiTuoMaiChuLiang2()) {
          setWeiTuoMaiChuLiang2(other.getWeiTuoMaiChuLiang2());
        }
        if (other.hasWeiTuoMaiChuJia3()) {
          setWeiTuoMaiChuJia3(other.getWeiTuoMaiChuJia3());
        }
        if (other.hasWeiTuoMaiChuLiang3()) {
          setWeiTuoMaiChuLiang3(other.getWeiTuoMaiChuLiang3());
        }
        if (other.hasWeiTuoMaiChuJia4()) {
          setWeiTuoMaiChuJia4(other.getWeiTuoMaiChuJia4());
        }
        if (other.hasWeiTuoMaiChuLiang4()) {
          setWeiTuoMaiChuLiang4(other.getWeiTuoMaiChuLiang4());
        }
        if (other.hasWeiTuoMaiChuJia5()) {
          setWeiTuoMaiChuJia5(other.getWeiTuoMaiChuJia5());
        }
        if (other.hasWeiTuoMaiChuLiang5()) {
          setWeiTuoMaiChuLiang5(other.getWeiTuoMaiChuLiang5());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasShiJian()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dzhyun.proto.DzhyunGupiaoqiepian.MaiMaiPan) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 Id = 1;
      private long id_ ;
      /**
       * <code>required int64 Id = 1;</code>
       *
       * <pre>
       *序号
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 Id = 1;</code>
       *
       * <pre>
       *序号
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 Id = 1;</code>
       *
       * <pre>
       *序号
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 Id = 1;</code>
       *
       * <pre>
       *序号
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      // required int64 ShiJian = 2;
      private long shiJian_ ;
      /**
       * <code>required int64 ShiJian = 2;</code>
       *
       * <pre>
       *时间
       * </pre>
       */
      public boolean hasShiJian() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 ShiJian = 2;</code>
       *
       * <pre>
       *时间
       * </pre>
       */
      public long getShiJian() {
        return shiJian_;
      }
      /**
       * <code>required int64 ShiJian = 2;</code>
       *
       * <pre>
       *时间
       * </pre>
       */
      public Builder setShiJian(long value) {
        bitField0_ |= 0x00000002;
        shiJian_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 ShiJian = 2;</code>
       *
       * <pre>
       *时间
       * </pre>
       */
      public Builder clearShiJian() {
        bitField0_ = (bitField0_ & ~0x00000002);
        shiJian_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiRuJia1 = 3;
      private long weiTuoMaiRuJia1_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuJia1 = 3;</code>
       *
       * <pre>
       *5档委托盘
       * </pre>
       */
      public boolean hasWeiTuoMaiRuJia1() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia1 = 3;</code>
       *
       * <pre>
       *5档委托盘
       * </pre>
       */
      public long getWeiTuoMaiRuJia1() {
        return weiTuoMaiRuJia1_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia1 = 3;</code>
       *
       * <pre>
       *5档委托盘
       * </pre>
       */
      public Builder setWeiTuoMaiRuJia1(long value) {
        bitField0_ |= 0x00000004;
        weiTuoMaiRuJia1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia1 = 3;</code>
       *
       * <pre>
       *5档委托盘
       * </pre>
       */
      public Builder clearWeiTuoMaiRuJia1() {
        bitField0_ = (bitField0_ & ~0x00000004);
        weiTuoMaiRuJia1_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiRuLiang1 = 4;
      private long weiTuoMaiRuLiang1_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuLiang1 = 4;</code>
       *
       * <pre>
       *委托买入量1，单位股
       * </pre>
       */
      public boolean hasWeiTuoMaiRuLiang1() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang1 = 4;</code>
       *
       * <pre>
       *委托买入量1，单位股
       * </pre>
       */
      public long getWeiTuoMaiRuLiang1() {
        return weiTuoMaiRuLiang1_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang1 = 4;</code>
       *
       * <pre>
       *委托买入量1，单位股
       * </pre>
       */
      public Builder setWeiTuoMaiRuLiang1(long value) {
        bitField0_ |= 0x00000008;
        weiTuoMaiRuLiang1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang1 = 4;</code>
       *
       * <pre>
       *委托买入量1，单位股
       * </pre>
       */
      public Builder clearWeiTuoMaiRuLiang1() {
        bitField0_ = (bitField0_ & ~0x00000008);
        weiTuoMaiRuLiang1_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiRuJia2 = 5;
      private long weiTuoMaiRuJia2_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuJia2 = 5;</code>
       *
       * <pre>
       *委托买入价2
       * </pre>
       */
      public boolean hasWeiTuoMaiRuJia2() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia2 = 5;</code>
       *
       * <pre>
       *委托买入价2
       * </pre>
       */
      public long getWeiTuoMaiRuJia2() {
        return weiTuoMaiRuJia2_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia2 = 5;</code>
       *
       * <pre>
       *委托买入价2
       * </pre>
       */
      public Builder setWeiTuoMaiRuJia2(long value) {
        bitField0_ |= 0x00000010;
        weiTuoMaiRuJia2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia2 = 5;</code>
       *
       * <pre>
       *委托买入价2
       * </pre>
       */
      public Builder clearWeiTuoMaiRuJia2() {
        bitField0_ = (bitField0_ & ~0x00000010);
        weiTuoMaiRuJia2_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiRuLiang2 = 6;
      private long weiTuoMaiRuLiang2_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuLiang2 = 6;</code>
       *
       * <pre>
       *委托买入量2，单位股
       * </pre>
       */
      public boolean hasWeiTuoMaiRuLiang2() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang2 = 6;</code>
       *
       * <pre>
       *委托买入量2，单位股
       * </pre>
       */
      public long getWeiTuoMaiRuLiang2() {
        return weiTuoMaiRuLiang2_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang2 = 6;</code>
       *
       * <pre>
       *委托买入量2，单位股
       * </pre>
       */
      public Builder setWeiTuoMaiRuLiang2(long value) {
        bitField0_ |= 0x00000020;
        weiTuoMaiRuLiang2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang2 = 6;</code>
       *
       * <pre>
       *委托买入量2，单位股
       * </pre>
       */
      public Builder clearWeiTuoMaiRuLiang2() {
        bitField0_ = (bitField0_ & ~0x00000020);
        weiTuoMaiRuLiang2_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiRuJia3 = 7;
      private long weiTuoMaiRuJia3_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuJia3 = 7;</code>
       *
       * <pre>
       *委托买入价3
       * </pre>
       */
      public boolean hasWeiTuoMaiRuJia3() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia3 = 7;</code>
       *
       * <pre>
       *委托买入价3
       * </pre>
       */
      public long getWeiTuoMaiRuJia3() {
        return weiTuoMaiRuJia3_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia3 = 7;</code>
       *
       * <pre>
       *委托买入价3
       * </pre>
       */
      public Builder setWeiTuoMaiRuJia3(long value) {
        bitField0_ |= 0x00000040;
        weiTuoMaiRuJia3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia3 = 7;</code>
       *
       * <pre>
       *委托买入价3
       * </pre>
       */
      public Builder clearWeiTuoMaiRuJia3() {
        bitField0_ = (bitField0_ & ~0x00000040);
        weiTuoMaiRuJia3_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiRuLiang3 = 8;
      private long weiTuoMaiRuLiang3_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuLiang3 = 8;</code>
       *
       * <pre>
       *委托买入量3，单位股
       * </pre>
       */
      public boolean hasWeiTuoMaiRuLiang3() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang3 = 8;</code>
       *
       * <pre>
       *委托买入量3，单位股
       * </pre>
       */
      public long getWeiTuoMaiRuLiang3() {
        return weiTuoMaiRuLiang3_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang3 = 8;</code>
       *
       * <pre>
       *委托买入量3，单位股
       * </pre>
       */
      public Builder setWeiTuoMaiRuLiang3(long value) {
        bitField0_ |= 0x00000080;
        weiTuoMaiRuLiang3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang3 = 8;</code>
       *
       * <pre>
       *委托买入量3，单位股
       * </pre>
       */
      public Builder clearWeiTuoMaiRuLiang3() {
        bitField0_ = (bitField0_ & ~0x00000080);
        weiTuoMaiRuLiang3_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiRuJia4 = 9;
      private long weiTuoMaiRuJia4_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuJia4 = 9;</code>
       *
       * <pre>
       *委托买入价4
       * </pre>
       */
      public boolean hasWeiTuoMaiRuJia4() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia4 = 9;</code>
       *
       * <pre>
       *委托买入价4
       * </pre>
       */
      public long getWeiTuoMaiRuJia4() {
        return weiTuoMaiRuJia4_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia4 = 9;</code>
       *
       * <pre>
       *委托买入价4
       * </pre>
       */
      public Builder setWeiTuoMaiRuJia4(long value) {
        bitField0_ |= 0x00000100;
        weiTuoMaiRuJia4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia4 = 9;</code>
       *
       * <pre>
       *委托买入价4
       * </pre>
       */
      public Builder clearWeiTuoMaiRuJia4() {
        bitField0_ = (bitField0_ & ~0x00000100);
        weiTuoMaiRuJia4_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiRuLiang4 = 10;
      private long weiTuoMaiRuLiang4_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuLiang4 = 10;</code>
       *
       * <pre>
       *委托买入量4，单位股
       * </pre>
       */
      public boolean hasWeiTuoMaiRuLiang4() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang4 = 10;</code>
       *
       * <pre>
       *委托买入量4，单位股
       * </pre>
       */
      public long getWeiTuoMaiRuLiang4() {
        return weiTuoMaiRuLiang4_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang4 = 10;</code>
       *
       * <pre>
       *委托买入量4，单位股
       * </pre>
       */
      public Builder setWeiTuoMaiRuLiang4(long value) {
        bitField0_ |= 0x00000200;
        weiTuoMaiRuLiang4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang4 = 10;</code>
       *
       * <pre>
       *委托买入量4，单位股
       * </pre>
       */
      public Builder clearWeiTuoMaiRuLiang4() {
        bitField0_ = (bitField0_ & ~0x00000200);
        weiTuoMaiRuLiang4_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiRuJia5 = 11;
      private long weiTuoMaiRuJia5_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuJia5 = 11;</code>
       *
       * <pre>
       *委托买入价5
       * </pre>
       */
      public boolean hasWeiTuoMaiRuJia5() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia5 = 11;</code>
       *
       * <pre>
       *委托买入价5
       * </pre>
       */
      public long getWeiTuoMaiRuJia5() {
        return weiTuoMaiRuJia5_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia5 = 11;</code>
       *
       * <pre>
       *委托买入价5
       * </pre>
       */
      public Builder setWeiTuoMaiRuJia5(long value) {
        bitField0_ |= 0x00000400;
        weiTuoMaiRuJia5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia5 = 11;</code>
       *
       * <pre>
       *委托买入价5
       * </pre>
       */
      public Builder clearWeiTuoMaiRuJia5() {
        bitField0_ = (bitField0_ & ~0x00000400);
        weiTuoMaiRuJia5_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiRuLiang5 = 12;
      private long weiTuoMaiRuLiang5_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuLiang5 = 12;</code>
       *
       * <pre>
       *委托买入量5，单位股
       * </pre>
       */
      public boolean hasWeiTuoMaiRuLiang5() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang5 = 12;</code>
       *
       * <pre>
       *委托买入量5，单位股
       * </pre>
       */
      public long getWeiTuoMaiRuLiang5() {
        return weiTuoMaiRuLiang5_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang5 = 12;</code>
       *
       * <pre>
       *委托买入量5，单位股
       * </pre>
       */
      public Builder setWeiTuoMaiRuLiang5(long value) {
        bitField0_ |= 0x00000800;
        weiTuoMaiRuLiang5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang5 = 12;</code>
       *
       * <pre>
       *委托买入量5，单位股
       * </pre>
       */
      public Builder clearWeiTuoMaiRuLiang5() {
        bitField0_ = (bitField0_ & ~0x00000800);
        weiTuoMaiRuLiang5_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiChuJia1 = 13;
      private long weiTuoMaiChuJia1_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuJia1 = 13;</code>
       *
       * <pre>
       *委托卖出价1
       * </pre>
       */
      public boolean hasWeiTuoMaiChuJia1() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia1 = 13;</code>
       *
       * <pre>
       *委托卖出价1
       * </pre>
       */
      public long getWeiTuoMaiChuJia1() {
        return weiTuoMaiChuJia1_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia1 = 13;</code>
       *
       * <pre>
       *委托卖出价1
       * </pre>
       */
      public Builder setWeiTuoMaiChuJia1(long value) {
        bitField0_ |= 0x00001000;
        weiTuoMaiChuJia1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia1 = 13;</code>
       *
       * <pre>
       *委托卖出价1
       * </pre>
       */
      public Builder clearWeiTuoMaiChuJia1() {
        bitField0_ = (bitField0_ & ~0x00001000);
        weiTuoMaiChuJia1_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiChuLiang1 = 14;
      private long weiTuoMaiChuLiang1_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuLiang1 = 14;</code>
       *
       * <pre>
       *委托卖出量1，单位股
       * </pre>
       */
      public boolean hasWeiTuoMaiChuLiang1() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang1 = 14;</code>
       *
       * <pre>
       *委托卖出量1，单位股
       * </pre>
       */
      public long getWeiTuoMaiChuLiang1() {
        return weiTuoMaiChuLiang1_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang1 = 14;</code>
       *
       * <pre>
       *委托卖出量1，单位股
       * </pre>
       */
      public Builder setWeiTuoMaiChuLiang1(long value) {
        bitField0_ |= 0x00002000;
        weiTuoMaiChuLiang1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang1 = 14;</code>
       *
       * <pre>
       *委托卖出量1，单位股
       * </pre>
       */
      public Builder clearWeiTuoMaiChuLiang1() {
        bitField0_ = (bitField0_ & ~0x00002000);
        weiTuoMaiChuLiang1_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiChuJia2 = 15;
      private long weiTuoMaiChuJia2_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuJia2 = 15;</code>
       *
       * <pre>
       *委托卖出价2
       * </pre>
       */
      public boolean hasWeiTuoMaiChuJia2() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia2 = 15;</code>
       *
       * <pre>
       *委托卖出价2
       * </pre>
       */
      public long getWeiTuoMaiChuJia2() {
        return weiTuoMaiChuJia2_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia2 = 15;</code>
       *
       * <pre>
       *委托卖出价2
       * </pre>
       */
      public Builder setWeiTuoMaiChuJia2(long value) {
        bitField0_ |= 0x00004000;
        weiTuoMaiChuJia2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia2 = 15;</code>
       *
       * <pre>
       *委托卖出价2
       * </pre>
       */
      public Builder clearWeiTuoMaiChuJia2() {
        bitField0_ = (bitField0_ & ~0x00004000);
        weiTuoMaiChuJia2_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiChuLiang2 = 16;
      private long weiTuoMaiChuLiang2_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuLiang2 = 16;</code>
       *
       * <pre>
       *委托卖出量2，单位股
       * </pre>
       */
      public boolean hasWeiTuoMaiChuLiang2() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang2 = 16;</code>
       *
       * <pre>
       *委托卖出量2，单位股
       * </pre>
       */
      public long getWeiTuoMaiChuLiang2() {
        return weiTuoMaiChuLiang2_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang2 = 16;</code>
       *
       * <pre>
       *委托卖出量2，单位股
       * </pre>
       */
      public Builder setWeiTuoMaiChuLiang2(long value) {
        bitField0_ |= 0x00008000;
        weiTuoMaiChuLiang2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang2 = 16;</code>
       *
       * <pre>
       *委托卖出量2，单位股
       * </pre>
       */
      public Builder clearWeiTuoMaiChuLiang2() {
        bitField0_ = (bitField0_ & ~0x00008000);
        weiTuoMaiChuLiang2_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiChuJia3 = 17;
      private long weiTuoMaiChuJia3_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuJia3 = 17;</code>
       *
       * <pre>
       *委托卖出价3
       * </pre>
       */
      public boolean hasWeiTuoMaiChuJia3() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia3 = 17;</code>
       *
       * <pre>
       *委托卖出价3
       * </pre>
       */
      public long getWeiTuoMaiChuJia3() {
        return weiTuoMaiChuJia3_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia3 = 17;</code>
       *
       * <pre>
       *委托卖出价3
       * </pre>
       */
      public Builder setWeiTuoMaiChuJia3(long value) {
        bitField0_ |= 0x00010000;
        weiTuoMaiChuJia3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia3 = 17;</code>
       *
       * <pre>
       *委托卖出价3
       * </pre>
       */
      public Builder clearWeiTuoMaiChuJia3() {
        bitField0_ = (bitField0_ & ~0x00010000);
        weiTuoMaiChuJia3_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiChuLiang3 = 18;
      private long weiTuoMaiChuLiang3_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuLiang3 = 18;</code>
       *
       * <pre>
       *委托卖出量3，单位股
       * </pre>
       */
      public boolean hasWeiTuoMaiChuLiang3() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang3 = 18;</code>
       *
       * <pre>
       *委托卖出量3，单位股
       * </pre>
       */
      public long getWeiTuoMaiChuLiang3() {
        return weiTuoMaiChuLiang3_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang3 = 18;</code>
       *
       * <pre>
       *委托卖出量3，单位股
       * </pre>
       */
      public Builder setWeiTuoMaiChuLiang3(long value) {
        bitField0_ |= 0x00020000;
        weiTuoMaiChuLiang3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang3 = 18;</code>
       *
       * <pre>
       *委托卖出量3，单位股
       * </pre>
       */
      public Builder clearWeiTuoMaiChuLiang3() {
        bitField0_ = (bitField0_ & ~0x00020000);
        weiTuoMaiChuLiang3_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiChuJia4 = 19;
      private long weiTuoMaiChuJia4_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuJia4 = 19;</code>
       *
       * <pre>
       *委托卖出价4
       * </pre>
       */
      public boolean hasWeiTuoMaiChuJia4() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia4 = 19;</code>
       *
       * <pre>
       *委托卖出价4
       * </pre>
       */
      public long getWeiTuoMaiChuJia4() {
        return weiTuoMaiChuJia4_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia4 = 19;</code>
       *
       * <pre>
       *委托卖出价4
       * </pre>
       */
      public Builder setWeiTuoMaiChuJia4(long value) {
        bitField0_ |= 0x00040000;
        weiTuoMaiChuJia4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia4 = 19;</code>
       *
       * <pre>
       *委托卖出价4
       * </pre>
       */
      public Builder clearWeiTuoMaiChuJia4() {
        bitField0_ = (bitField0_ & ~0x00040000);
        weiTuoMaiChuJia4_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiChuLiang4 = 20;
      private long weiTuoMaiChuLiang4_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuLiang4 = 20;</code>
       *
       * <pre>
       *委托卖出量4，单位股
       * </pre>
       */
      public boolean hasWeiTuoMaiChuLiang4() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang4 = 20;</code>
       *
       * <pre>
       *委托卖出量4，单位股
       * </pre>
       */
      public long getWeiTuoMaiChuLiang4() {
        return weiTuoMaiChuLiang4_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang4 = 20;</code>
       *
       * <pre>
       *委托卖出量4，单位股
       * </pre>
       */
      public Builder setWeiTuoMaiChuLiang4(long value) {
        bitField0_ |= 0x00080000;
        weiTuoMaiChuLiang4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang4 = 20;</code>
       *
       * <pre>
       *委托卖出量4，单位股
       * </pre>
       */
      public Builder clearWeiTuoMaiChuLiang4() {
        bitField0_ = (bitField0_ & ~0x00080000);
        weiTuoMaiChuLiang4_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiChuJia5 = 21;
      private long weiTuoMaiChuJia5_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuJia5 = 21;</code>
       *
       * <pre>
       *委托卖出价5
       * </pre>
       */
      public boolean hasWeiTuoMaiChuJia5() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia5 = 21;</code>
       *
       * <pre>
       *委托卖出价5
       * </pre>
       */
      public long getWeiTuoMaiChuJia5() {
        return weiTuoMaiChuJia5_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia5 = 21;</code>
       *
       * <pre>
       *委托卖出价5
       * </pre>
       */
      public Builder setWeiTuoMaiChuJia5(long value) {
        bitField0_ |= 0x00100000;
        weiTuoMaiChuJia5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia5 = 21;</code>
       *
       * <pre>
       *委托卖出价5
       * </pre>
       */
      public Builder clearWeiTuoMaiChuJia5() {
        bitField0_ = (bitField0_ & ~0x00100000);
        weiTuoMaiChuJia5_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 WeiTuoMaiChuLiang5 = 22;
      private long weiTuoMaiChuLiang5_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuLiang5 = 22;</code>
       *
       * <pre>
       *委托卖出量5，单位股
       * </pre>
       */
      public boolean hasWeiTuoMaiChuLiang5() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang5 = 22;</code>
       *
       * <pre>
       *委托卖出量5，单位股
       * </pre>
       */
      public long getWeiTuoMaiChuLiang5() {
        return weiTuoMaiChuLiang5_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang5 = 22;</code>
       *
       * <pre>
       *委托卖出量5，单位股
       * </pre>
       */
      public Builder setWeiTuoMaiChuLiang5(long value) {
        bitField0_ |= 0x00200000;
        weiTuoMaiChuLiang5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang5 = 22;</code>
       *
       * <pre>
       *委托卖出量5，单位股
       * </pre>
       */
      public Builder clearWeiTuoMaiChuLiang5() {
        bitField0_ = (bitField0_ & ~0x00200000);
        weiTuoMaiChuLiang5_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dzhyun.MaiMaiPan)
    }

    static {
      defaultInstance = new MaiMaiPan(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dzhyun.MaiMaiPan)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dzhyun_FenBiChengJiao_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dzhyun_FenBiChengJiao_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dzhyun_GeGuDongTai_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dzhyun_GeGuDongTai_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dzhyun_MaiMaiPan_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dzhyun_MaiMaiPan_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032dzhyun.gupiaoqiepian.proto\022\006dzhyun\"\253\001\n" +
      "\016FenBiChengJiao\022\n\n\002Id\030\001 \002(\003\022\017\n\007ShiJian\030\002" +
      " \002(\003\022\024\n\014ChengJiaoJia\030\003 \001(\003\022\026\n\016ChengJiaoL" +
      "iang\030\004 \001(\003\022\022\n\nChengJiaoE\030\005 \001(\003\022\031\n\021ChengJ" +
      "iaoDanBiShu\030\006 \001(\003\022\037\n\027ShiFouZhuDongXingMa" +
      "iDan\030\007 \001(\003\"\335\003\n\013GeGuDongTai\022\n\n\002Id\030\001 \002(\003\022\017" +
      "\n\007ShiJian\030\002 \002(\003\022\021\n\tZuiXinJia\030\003 \001(\003\022\021\n\tKa" +
      "iPanJia\030\004 \001(\003\022\021\n\tZuiGaoJia\030\005 \001(\003\022\020\n\010ZuiD" +
      "iJia\030\006 \001(\003\022\017\n\007ZuoShou\030\007 \001(\003\022\016\n\006JunJia\030\010 " +
      "\001(\003\022\020\n\010ZhangDie\030\t \001(\003\022\017\n\007ZhangFu\030\n \001(\003\022\016",
      "\n\006ZhenFu\030\013 \001(\003\022\026\n\016ChengJiaoLiang\030\014 \001(\003\022\020" +
      "\n\010XianShou\030\r \001(\003\022\022\n\nChengJiaoE\030\016 \001(\003\022\032\n\022" +
      "ZongChengJiaoBiShu\030\017 \001(\003\022\033\n\023MeiBiChengJi" +
      "aoGuShu\030\020 \001(\003\022\020\n\010HuanShou\030\021 \001(\003\022\017\n\007Liang" +
      "Bi\030\022 \001(\003\022\016\n\006NeiPan\030\023 \001(\003\022\016\n\006WaiPan\030\024 \001(\003" +
      "\022\021\n\tZongMaiRu\030\025 \001(\003\022\022\n\nZongMaiChu\030\026 \001(\003\022" +
      "\027\n\017ZongMaiRuJunJia\030\027 \001(\003\022\030\n\020ZongMaiChuJu" +
      "nJia\030\030 \001(\003\"\272\004\n\tMaiMaiPan\022\n\n\002Id\030\001 \002(\003\022\017\n\007" +
      "ShiJian\030\002 \002(\003\022\027\n\017WeiTuoMaiRuJia1\030\003 \001(\003\022\031" +
      "\n\021WeiTuoMaiRuLiang1\030\004 \001(\003\022\027\n\017WeiTuoMaiRu",
      "Jia2\030\005 \001(\003\022\031\n\021WeiTuoMaiRuLiang2\030\006 \001(\003\022\027\n" +
      "\017WeiTuoMaiRuJia3\030\007 \001(\003\022\031\n\021WeiTuoMaiRuLia" +
      "ng3\030\010 \001(\003\022\027\n\017WeiTuoMaiRuJia4\030\t \001(\003\022\031\n\021We" +
      "iTuoMaiRuLiang4\030\n \001(\003\022\027\n\017WeiTuoMaiRuJia5" +
      "\030\013 \001(\003\022\031\n\021WeiTuoMaiRuLiang5\030\014 \001(\003\022\030\n\020Wei" +
      "TuoMaiChuJia1\030\r \001(\003\022\032\n\022WeiTuoMaiChuLiang" +
      "1\030\016 \001(\003\022\030\n\020WeiTuoMaiChuJia2\030\017 \001(\003\022\032\n\022Wei" +
      "TuoMaiChuLiang2\030\020 \001(\003\022\030\n\020WeiTuoMaiChuJia" +
      "3\030\021 \001(\003\022\032\n\022WeiTuoMaiChuLiang3\030\022 \001(\003\022\030\n\020W" +
      "eiTuoMaiChuJia4\030\023 \001(\003\022\032\n\022WeiTuoMaiChuLia",
      "ng4\030\024 \001(\003\022\030\n\020WeiTuoMaiChuJia5\030\025 \001(\003\022\032\n\022W" +
      "eiTuoMaiChuLiang5\030\026 \001(\003B\022\n\020com.dzhyun.pr" +
      "oto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_dzhyun_FenBiChengJiao_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_dzhyun_FenBiChengJiao_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dzhyun_FenBiChengJiao_descriptor,
              new java.lang.String[] { "Id", "ShiJian", "ChengJiaoJia", "ChengJiaoLiang", "ChengJiaoE", "ChengJiaoDanBiShu", "ShiFouZhuDongXingMaiDan", });
          internal_static_dzhyun_GeGuDongTai_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_dzhyun_GeGuDongTai_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dzhyun_GeGuDongTai_descriptor,
              new java.lang.String[] { "Id", "ShiJian", "ZuiXinJia", "KaiPanJia", "ZuiGaoJia", "ZuiDiJia", "ZuoShou", "JunJia", "ZhangDie", "ZhangFu", "ZhenFu", "ChengJiaoLiang", "XianShou", "ChengJiaoE", "ZongChengJiaoBiShu", "MeiBiChengJiaoGuShu", "HuanShou", "LiangBi", "NeiPan", "WaiPan", "ZongMaiRu", "ZongMaiChu", "ZongMaiRuJunJia", "ZongMaiChuJunJia", });
          internal_static_dzhyun_MaiMaiPan_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_dzhyun_MaiMaiPan_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_dzhyun_MaiMaiPan_descriptor,
              new java.lang.String[] { "Id", "ShiJian", "WeiTuoMaiRuJia1", "WeiTuoMaiRuLiang1", "WeiTuoMaiRuJia2", "WeiTuoMaiRuLiang2", "WeiTuoMaiRuJia3", "WeiTuoMaiRuLiang3", "WeiTuoMaiRuJia4", "WeiTuoMaiRuLiang4", "WeiTuoMaiRuJia5", "WeiTuoMaiRuLiang5", "WeiTuoMaiChuJia1", "WeiTuoMaiChuLiang1", "WeiTuoMaiChuJia2", "WeiTuoMaiChuLiang2", "WeiTuoMaiChuJia3", "WeiTuoMaiChuLiang3", "WeiTuoMaiChuJia4", "WeiTuoMaiChuLiang4", "WeiTuoMaiChuJia5", "WeiTuoMaiChuLiang5", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
